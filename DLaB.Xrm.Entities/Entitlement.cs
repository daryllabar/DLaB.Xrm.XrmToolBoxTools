//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.Xrm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public enum EntitlementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expired = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Waiting = 4,
	}
	
	/// <summary>
	/// Defines the amount and type of support a customer should receive.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("entitlement")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public partial class Entitlement : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string AccountId = "accountid";
			public const string AllocationTypeCode = "allocationtypecode";
			public const string ContactId = "contactid";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CustomerId = "customerid";
			public const string DecreaseRemainingOn = "decreaseremainingon";
			public const string Description = "description";
			public const string EndDate = "enddate";
			public const string EntitlementId = "entitlementid";
			public const string Id = "entitlementid";
			public const string EntitlementTemplateId = "entitlementtemplateid";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsDefault = "isdefault";
			public const string KbAccessLevel = "kbaccesslevel";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ProcessId = "processid";
			public const string RemainingTerms = "remainingterms";
			public const string RestrictCaseCreation = "restrictcasecreation";
			public const string SLAId = "slaid";
			public const string StageId = "stageid";
			public const string StartDate = "startdate";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalTerms = "totalterms";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string account_entitlement_Account = "account_entitlement_Account";
			public const string account_entitlement_Customer = "account_entitlement_Customer";
			public const string business_unit_entitlement = "business_unit_entitlement";
			public const string contact_entitlement_ContactId = "contact_entitlement_ContactId";
			public const string contact_entitlement_Customer = "contact_entitlement_Customer";
			public const string entitlementtemplateid_RelationShip = "entitlementtemplateid_RelationShip";
			public const string lk_entitlement_createdby = "lk_entitlement_createdby";
			public const string lk_entitlement_createdonbehalfby = "lk_entitlement_createdonbehalfby";
			public const string lk_entitlement_modifiedby = "lk_entitlement_modifiedby";
			public const string lk_entitlement_modifiedonbehalfby = "lk_entitlement_modifiedonbehalfby";
			public const string sla_entitlement = "sla_entitlement";
			public const string team_entitlement = "team_entitlement";
			public const string TransactionCurrency_Entitlement = "TransactionCurrency_Entitlement";
			public const string user_entitlement = "user_entitlement";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Entitlement() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "entitlement";
		
		public const int EntityTypeCode = 9700;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		/// <summary>
		/// Select the type of entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allocationtypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue AllocationTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("allocationtypecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllocationTypeCode");
				this.SetAttributeValue("allocationtypecode", value);
				this.OnPropertyChanged("AllocationTypeCode");
			}
		}
		
		/// <summary>
		/// Unique identifier for Contact associated with Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the entitlement was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Choose a contact or account for which this entitlement has been defined.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CustomerId");
				this.SetAttributeValue("customerid", value);
				this.OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// Select whether to decrease the remaining terms when the case is created or when it is resolved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decreaseremainingon")]
		public Microsoft.Xrm.Sdk.OptionSetValue DecreaseRemainingOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("decreaseremainingon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DecreaseRemainingOn");
				this.SetAttributeValue("decreaseremainingon", value);
				this.OnPropertyChanged("DecreaseRemainingOn");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the Entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Enter the date when the entitlement ends.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enddate")]
		public System.Nullable<System.DateTime> EndDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("enddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EndDate");
				this.SetAttributeValue("enddate", value);
				this.OnPropertyChanged("EndDate");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		public System.Nullable<System.Guid> EntitlementId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entitlementid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntitlementId");
				this.SetAttributeValue("entitlementid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("EntitlementId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.EntitlementId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier for Entitlement Template associated with Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementtemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference EntitlementTemplateId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("entitlementtemplateid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntitlementTemplateId");
				this.SetAttributeValue("entitlementtemplateid", value);
				this.OnPropertyChanged("EntitlementTemplateId");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the contact with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Shows whether this entitlement is the default one for the specified customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefault")]
		public System.Nullable<bool> IsDefault
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefault");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDefault");
				this.SetAttributeValue("isdefault", value);
				this.OnPropertyChanged("IsDefault");
			}
		}
		
		/// <summary>
		/// Select the access someone will have to the knowledge base on the portal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbaccesslevel")]
		public Microsoft.Xrm.Sdk.OptionSetValue KbAccessLevel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("kbaccesslevel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("KbAccessLevel");
				this.SetAttributeValue("kbaccesslevel", value);
				this.OnPropertyChanged("KbAccessLevel");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Type a meaningful name for the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Enter the user or team who owns the entitlement. This field is updated every time the item is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningBusinessUnit");
				this.SetAttributeValue("owningbusinessunit", value);
				this.OnPropertyChanged("OwningBusinessUnit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningTeam");
				this.SetAttributeValue("owningteam", value);
				this.OnPropertyChanged("OwningTeam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningUser");
				this.SetAttributeValue("owninguser", value);
				this.OnPropertyChanged("OwningUser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Type the total number of entitlement terms that are left.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("remainingterms")]
		public System.Nullable<decimal> RemainingTerms
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("remainingterms");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RemainingTerms");
				this.SetAttributeValue("remainingterms", value);
				this.OnPropertyChanged("RemainingTerms");
			}
		}
		
		/// <summary>
		/// Tells whether case creation is restricted based on entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("restrictcasecreation")]
		public System.Nullable<bool> RestrictCaseCreation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("restrictcasecreation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RestrictCaseCreation");
				this.SetAttributeValue("restrictcasecreation", value);
				this.OnPropertyChanged("RestrictCaseCreation");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) associated with the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SLAId");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startdate")]
		public System.Nullable<System.DateTime> StartDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StartDate");
				this.SetAttributeValue("startdate", value);
				this.OnPropertyChanged("StartDate");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Entities.EntitlementState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Entities.EntitlementState)(System.Enum.ToObject(typeof(Entities.EntitlementState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the reason code that explains the status of the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Type the total number of entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalterms")]
		public System.Nullable<decimal> TotalTerms
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("totalterms");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TotalTerms");
				this.SetAttributeValue("totalterms", value);
				this.OnPropertyChanged("TotalTerms");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the entitlement item.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<Entities.ActivityPointer> entitlement_ActivityPointers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ActivityPointer>("entitlement_ActivityPointers", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_ActivityPointers");
				this.SetRelatedEntities<Entities.ActivityPointer>("entitlement_ActivityPointers", null, value);
				this.OnPropertyChanged("entitlement_ActivityPointers");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_Annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_Annotations")]
		public System.Collections.Generic.IEnumerable<Entities.Annotation> entitlement_Annotations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Annotation>("entitlement_Annotations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_Annotations");
				this.SetRelatedEntities<Entities.Annotation>("entitlement_Annotations", null, value);
				this.OnPropertyChanged("entitlement_Annotations");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_Appointments")]
		public System.Collections.Generic.IEnumerable<Entities.Appointment> entitlement_Appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Appointment>("entitlement_Appointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_Appointments");
				this.SetRelatedEntities<Entities.Appointment>("entitlement_Appointments", null, value);
				this.OnPropertyChanged("entitlement_Appointments");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Entities.AsyncOperation> entitlement_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.AsyncOperation>("entitlement_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_AsyncOperations");
				this.SetRelatedEntities<Entities.AsyncOperation>("entitlement_AsyncOperations", null, value);
				this.OnPropertyChanged("entitlement_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Entities.BulkDeleteFailure> entitlement_BulkDeleteFailures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.BulkDeleteFailure>("entitlement_BulkDeleteFailures", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_BulkDeleteFailures");
				this.SetRelatedEntities<Entities.BulkDeleteFailure>("entitlement_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("entitlement_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_cases
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_cases")]
		public System.Collections.Generic.IEnumerable<Entities.Incident> entitlement_cases
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Incident>("entitlement_cases", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_cases");
				this.SetRelatedEntities<Entities.Incident>("entitlement_cases", null, value);
				this.OnPropertyChanged("entitlement_cases");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_connections1")]
		public System.Collections.Generic.IEnumerable<Entities.Connection> entitlement_connections1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Connection>("entitlement_connections1", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_connections1");
				this.SetRelatedEntities<Entities.Connection>("entitlement_connections1", null, value);
				this.OnPropertyChanged("entitlement_connections1");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_connections2")]
		public System.Collections.Generic.IEnumerable<Entities.Connection> entitlement_connections2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Connection>("entitlement_connections2", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_connections2");
				this.SetRelatedEntities<Entities.Connection>("entitlement_connections2", null, value);
				this.OnPropertyChanged("entitlement_connections2");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> entitlement_DuplicateBaseRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DuplicateRecord>("entitlement_DuplicateBaseRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_DuplicateBaseRecord");
				this.SetRelatedEntities<Entities.DuplicateRecord>("entitlement_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("entitlement_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> entitlement_DuplicateMatchingRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DuplicateRecord>("entitlement_DuplicateMatchingRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_DuplicateMatchingRecord");
				this.SetRelatedEntities<Entities.DuplicateRecord>("entitlement_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("entitlement_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_Emails")]
		public System.Collections.Generic.IEnumerable<Entities.Email> entitlement_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Email>("entitlement_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_Emails");
				this.SetRelatedEntities<Entities.Email>("entitlement_Emails", null, value);
				this.OnPropertyChanged("entitlement_Emails");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_entitlementchannel_EntitlementId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_entitlementchannel_EntitlementId")]
		public System.Collections.Generic.IEnumerable<Entities.EntitlementChannel> entitlement_entitlementchannel_EntitlementId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.EntitlementChannel>("entitlement_entitlementchannel_EntitlementId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_entitlementchannel_EntitlementId");
				this.SetRelatedEntities<Entities.EntitlementChannel>("entitlement_entitlementchannel_EntitlementId", null, value);
				this.OnPropertyChanged("entitlement_entitlementchannel_EntitlementId");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_Faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_Faxes")]
		public System.Collections.Generic.IEnumerable<Entities.Fax> entitlement_Faxes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Fax>("entitlement_Faxes", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_Faxes");
				this.SetRelatedEntities<Entities.Fax>("entitlement_Faxes", null, value);
				this.OnPropertyChanged("entitlement_Faxes");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_Letters")]
		public System.Collections.Generic.IEnumerable<Entities.Letter> entitlement_Letters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Letter>("entitlement_Letters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_Letters");
				this.SetRelatedEntities<Entities.Letter>("entitlement_Letters", null, value);
				this.OnPropertyChanged("entitlement_Letters");
			}
		}
		
		/// <summary>
		/// 1:N Entitlement_MailboxTrackingFolder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Entitlement_MailboxTrackingFolder")]
		public System.Collections.Generic.IEnumerable<Entities.MailboxTrackingFolder> Entitlement_MailboxTrackingFolder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.MailboxTrackingFolder>("Entitlement_MailboxTrackingFolder", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Entitlement_MailboxTrackingFolder");
				this.SetRelatedEntities<Entities.MailboxTrackingFolder>("Entitlement_MailboxTrackingFolder", null, value);
				this.OnPropertyChanged("Entitlement_MailboxTrackingFolder");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_PhoneCalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_PhoneCalls")]
		public System.Collections.Generic.IEnumerable<Entities.PhoneCall> entitlement_PhoneCalls
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.PhoneCall>("entitlement_PhoneCalls", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_PhoneCalls");
				this.SetRelatedEntities<Entities.PhoneCall>("entitlement_PhoneCalls", null, value);
				this.OnPropertyChanged("entitlement_PhoneCalls");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Entities.PrincipalObjectAttributeAccess> entitlement_PrincipalObjectAttributeAccesses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.PrincipalObjectAttributeAccess>("entitlement_PrincipalObjectAttributeAccesses", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<Entities.PrincipalObjectAttributeAccess>("entitlement_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("entitlement_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Entities.ProcessSession> entitlement_ProcessSession
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ProcessSession>("entitlement_ProcessSession", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_ProcessSession");
				this.SetRelatedEntities<Entities.ProcessSession>("entitlement_ProcessSession", null, value);
				this.OnPropertyChanged("entitlement_ProcessSession");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_RecurringAppointmentMasters")]
		public System.Collections.Generic.IEnumerable<Entities.RecurringAppointmentMaster> entitlement_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.RecurringAppointmentMaster>("entitlement_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_RecurringAppointmentMasters");
				this.SetRelatedEntities<Entities.RecurringAppointmentMaster>("entitlement_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("entitlement_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_ServiceAppointments")]
		public System.Collections.Generic.IEnumerable<Entities.ServiceAppointment> entitlement_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ServiceAppointment>("entitlement_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_ServiceAppointments");
				this.SetRelatedEntities<Entities.ServiceAppointment>("entitlement_ServiceAppointments", null, value);
				this.OnPropertyChanged("entitlement_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_SocialActivities
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_SocialActivities")]
		public System.Collections.Generic.IEnumerable<Entities.SocialActivity> entitlement_SocialActivities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SocialActivity>("entitlement_SocialActivities", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_SocialActivities");
				this.SetRelatedEntities<Entities.SocialActivity>("entitlement_SocialActivities", null, value);
				this.OnPropertyChanged("entitlement_SocialActivities");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_Tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_Tasks")]
		public System.Collections.Generic.IEnumerable<Entities.Task> entitlement_Tasks
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Task>("entitlement_Tasks", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_Tasks");
				this.SetRelatedEntities<Entities.Task>("entitlement_Tasks", null, value);
				this.OnPropertyChanged("entitlement_Tasks");
			}
		}
		
		/// <summary>
		/// 1:N entitlement_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Entities.UserEntityInstanceData> entitlement_UserEntityInstanceDatas
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.UserEntityInstanceData>("entitlement_UserEntityInstanceDatas", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_UserEntityInstanceDatas");
				this.SetRelatedEntities<Entities.UserEntityInstanceData>("entitlement_UserEntityInstanceDatas", null, value);
				this.OnPropertyChanged("entitlement_UserEntityInstanceDatas");
			}
		}
		
		/// <summary>
		/// N:N entitlementcontacts_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementcontacts_association")]
		public System.Collections.Generic.IEnumerable<Entities.Contact> entitlementcontacts_association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Contact>("entitlementcontacts_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlementcontacts_association");
				this.SetRelatedEntities<Entities.Contact>("entitlementcontacts_association", null, value);
				this.OnPropertyChanged("entitlementcontacts_association");
			}
		}
		
		/// <summary>
		/// N:N product_entitlement_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("product_entitlement_association")]
		public System.Collections.Generic.IEnumerable<Entities.Product> product_entitlement_association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Product>("product_entitlement_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("product_entitlement_association");
				this.SetRelatedEntities<Entities.Product>("product_entitlement_association", null, value);
				this.OnPropertyChanged("product_entitlement_association");
			}
		}
		
		/// <summary>
		/// N:1 account_entitlement_Account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_entitlement_Account")]
		public Entities.Account account_entitlement_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Account>("account_entitlement_Account", null);
			}
		}
		
		/// <summary>
		/// N:1 account_entitlement_Customer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_entitlement_Customer")]
		public Entities.Account account_entitlement_Customer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Account>("account_entitlement_Customer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("account_entitlement_Customer");
				this.SetRelatedEntity<Entities.Account>("account_entitlement_Customer", null, value);
				this.OnPropertyChanged("account_entitlement_Customer");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_entitlement")]
		public Entities.BusinessUnit business_unit_entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.BusinessUnit>("business_unit_entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("business_unit_entitlement");
				this.SetRelatedEntity<Entities.BusinessUnit>("business_unit_entitlement", null, value);
				this.OnPropertyChanged("business_unit_entitlement");
			}
		}
		
		/// <summary>
		/// N:1 contact_entitlement_ContactId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_entitlement_ContactId")]
		public Entities.Contact contact_entitlement_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Contact>("contact_entitlement_ContactId", null);
			}
		}
		
		/// <summary>
		/// N:1 contact_entitlement_Customer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_entitlement_Customer")]
		public Entities.Contact contact_entitlement_Customer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Contact>("contact_entitlement_Customer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("contact_entitlement_Customer");
				this.SetRelatedEntity<Entities.Contact>("contact_entitlement_Customer", null, value);
				this.OnPropertyChanged("contact_entitlement_Customer");
			}
		}
		
		/// <summary>
		/// N:1 entitlementtemplateid_RelationShip
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementtemplateid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementtemplateid_RelationShip")]
		public Entities.EntitlementTemplate entitlementtemplateid_RelationShip
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.EntitlementTemplate>("entitlementtemplateid_RelationShip", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlementtemplateid_RelationShip");
				this.SetRelatedEntity<Entities.EntitlementTemplate>("entitlementtemplateid_RelationShip", null, value);
				this.OnPropertyChanged("entitlementtemplateid_RelationShip");
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlement_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlement_createdby")]
		public Entities.SystemUser lk_entitlement_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_entitlement_createdby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_entitlement_createdby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_entitlement_createdby", null, value);
				this.OnPropertyChanged("lk_entitlement_createdby");
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlement_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlement_createdonbehalfby")]
		public Entities.SystemUser lk_entitlement_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_entitlement_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_entitlement_createdonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_entitlement_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_entitlement_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlement_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlement_modifiedby")]
		public Entities.SystemUser lk_entitlement_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_entitlement_modifiedby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_entitlement_modifiedby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_entitlement_modifiedby", null, value);
				this.OnPropertyChanged("lk_entitlement_modifiedby");
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlement_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlement_modifiedonbehalfby")]
		public Entities.SystemUser lk_entitlement_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_entitlement_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_entitlement_modifiedonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_entitlement_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_entitlement_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 sla_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("sla_entitlement")]
		public Entities.SLA sla_entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SLA>("sla_entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("sla_entitlement");
				this.SetRelatedEntity<Entities.SLA>("sla_entitlement", null, value);
				this.OnPropertyChanged("sla_entitlement");
			}
		}
		
		/// <summary>
		/// N:1 team_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_entitlement")]
		public Entities.Team team_entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Team>("team_entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("team_entitlement");
				this.SetRelatedEntity<Entities.Team>("team_entitlement", null, value);
				this.OnPropertyChanged("team_entitlement");
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Entitlement")]
		public Entities.TransactionCurrency TransactionCurrency_Entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.TransactionCurrency>("TransactionCurrency_Entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Entitlement");
				this.SetRelatedEntity<Entities.TransactionCurrency>("TransactionCurrency_Entitlement", null, value);
				this.OnPropertyChanged("TransactionCurrency_Entitlement");
			}
		}
		
		/// <summary>
		/// N:1 user_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_entitlement")]
		public Entities.SystemUser user_entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("user_entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("user_entitlement");
				this.SetRelatedEntity<Entities.SystemUser>("user_entitlement", null, value);
				this.OnPropertyChanged("user_entitlement");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Entitlement(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["entitlementid"] = base.Id;
                        break;
                    case "entitlementid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allocationtypecode")]
		public virtual Entitlement_AllocationTypeCode? AllocationTypeCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Entitlement_AllocationTypeCode?)(EntityOptionSetEnum.GetEnum(this, "allocationtypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				AllocationTypeCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decreaseremainingon")]
		public virtual Entitlement_DecreaseRemainingOn? DecreaseRemainingOnEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Entitlement_DecreaseRemainingOn?)(EntityOptionSetEnum.GetEnum(this, "decreaseremainingon")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				DecreaseRemainingOn = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbaccesslevel")]
		public virtual Entitlement_KbAccessLevel? KbAccessLevelEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Entitlement_KbAccessLevel?)(EntityOptionSetEnum.GetEnum(this, "kbaccesslevel")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				KbAccessLevel = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Entitlement_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Entitlement_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}