//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.Xrm.Entities
{
	
	/// <summary>
	/// Document libraries or folders on a SharePoint server from where documents can be managed in Microsoft Dynamics CRM.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("sharepointdocument")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public partial class SharePointDocument : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string AbsoluteUrl = "absoluteurl";
			public const string AppCreatedBy = "appcreatedby";
			public const string AppModifiedBy = "appmodifiedby";
			public const string Author = "author";
			public const string BusinessUnitId = "businessunitid";
			public const string CheckedOutTo = "checkedoutto";
			public const string CheckInComment = "checkincomment";
			public const string ChildFolderCount = "childfoldercount";
			public const string ChildItemCount = "childitemcount";
			public const string ContentType = "contenttype";
			public const string ContentTypeId = "contenttypeid";
			public const string CopySource = "copysource";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string DocumentId = "documentid";
			public const string DocumentLocationType = "documentlocationtype";
			public const string Edit = "edit";
			public const string EditUrl = "editurl";
			public const string ExchangeRate = "exchangerate";
			public const string FileSize = "filesize";
			public const string FileType = "filetype";
			public const string FullName = "fullname";
			public const string IconClassName = "iconclassname";
			public const string IsCheckedOut = "ischeckedout";
			public const string IsFolder = "isfolder";
			public const string IsRecursiveFetch = "isrecursivefetch";
			public const string LocationId = "locationid";
			public const string Modified = "modified";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ReadUrl = "readurl";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RelativeLocation = "relativelocation";
			public const string ServiceType = "servicetype";
			public const string SharePointCreatedOn = "sharepointcreatedon";
			public const string SharePointDocumentId = "sharepointdocumentid";
			public const string Id = "sharepointdocumentid";
			public const string SharePointModifiedBy = "sharepointmodifiedby";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string Version = "version";
			public const string Account_SharepointDocument = "Account_SharepointDocument";
			public const string business_unit_sharepointdocument = "business_unit_sharepointdocument";
			public const string business_unit_sharepointdocument2 = "business_unit_sharepointdocument2";
			public const string KbArticle_SharepointDocument = "KbArticle_SharepointDocument";
			public const string Lead_SharepointDocument = "Lead_SharepointDocument";
			public const string lk_sharepointdocumentbase_createdby = "lk_sharepointdocumentbase_createdby";
			public const string lk_sharepointdocumentbase_createdonbehalfby = "lk_sharepointdocumentbase_createdonbehalfby";
			public const string lk_sharepointdocumentbase_modifiedby = "lk_sharepointdocumentbase_modifiedby";
			public const string lk_sharepointdocumentbase_modifiedonbehalfby = "lk_sharepointdocumentbase_modifiedonbehalfby";
			public const string Opportunity_SharepointDocument = "Opportunity_SharepointDocument";
			public const string organization_sharepointdocument = "organization_sharepointdocument";
			public const string Product_SharepointDocument = "Product_SharepointDocument";
			public const string Quote_SharepointDocument = "Quote_SharepointDocument";
			public const string SalesLiterature_SharepointDocument = "SalesLiterature_SharepointDocument";
			public const string TransactionCurrency_SharePointDocument = "TransactionCurrency_SharePointDocument";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public SharePointDocument() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "sharepointdocument";
		
		public const int EntityTypeCode = 9507;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Type the URL where the SharePoint document is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("absoluteurl")]
		public string AbsoluteUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("absoluteurl");
			}
		}
		
		/// <summary>
		/// Name of the person who created the application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appcreatedby")]
		public string AppCreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("appcreatedby");
			}
		}
		
		/// <summary>
		/// Name of the person who last modified the application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appmodifiedby")]
		public string AppModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("appmodifiedby");
			}
		}
		
		/// <summary>
		/// Name of the author of the SharePoint document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("author")]
		public string Author
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("author");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Author");
				this.SetAttributeValue("author", value);
				this.OnPropertyChanged("Author");
			}
		}
		
		/// <summary>
		/// Shows the business unit that the record is associated with.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BusinessUnitId");
				this.SetAttributeValue("businessunitid", value);
				this.OnPropertyChanged("BusinessUnitId");
			}
		}
		
		/// <summary>
		/// Shows who the SharePoint document is checked out to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkedoutto")]
		public string CheckedOutTo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("checkedoutto");
			}
		}
		
		/// <summary>
		/// Type a comment about the document that is being checked in.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkincomment")]
		public string CheckInComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("checkincomment");
			}
		}
		
		/// <summary>
		/// Shows the number of child folders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childfoldercount")]
		public System.Nullable<int> ChildFolderCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("childfoldercount");
			}
		}
		
		/// <summary>
		/// Shows how many child items there are.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childitemcount")]
		public System.Nullable<int> ChildItemCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("childitemcount");
			}
		}
		
		/// <summary>
		/// The content type of the document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contenttype")]
		public string ContentType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("contenttype");
			}
		}
		
		/// <summary>
		/// Shows the unique identifier of the content type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contenttypeid")]
		public System.Nullable<int> ContentTypeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("contenttypeid");
			}
		}
		
		/// <summary>
		/// SharePoint source item URL
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("copysource")]
		public string CopySource
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("copysource");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier of a SharePoint document in document library.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("documentid")]
		public System.Nullable<int> DocumentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("documentid");
			}
		}
		
		/// <summary>
		/// Location type of the SharePoint document location.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("documentlocationtype")]
		public Microsoft.Xrm.Sdk.OptionSetValue DocumentLocationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("documentlocationtype");
			}
		}
		
		/// <summary>
		/// Edit Url of the Sharepoint Form
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("edit")]
		public string Edit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("edit");
			}
		}
		
		/// <summary>
		/// Shows the edit URL of the SharePoint document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("editurl")]
		public string EditUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("editurl");
			}
		}
		
		/// <summary>
		/// Shows the exchange rate between the currency associated with the SharePoint document record and the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Shows the file size.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filesize")]
		public System.Nullable<int> FileSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("filesize");
			}
		}
		
		/// <summary>
		/// Shows the file type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filetype")]
		public string FileType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("filetype");
			}
		}
		
		/// <summary>
		/// Shows the full name of the SharePoint document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullname")]
		public string FullName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fullname");
			}
		}
		
		/// <summary>
		/// Stores the Icon Class name of the SharePoint document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iconclassname")]
		public string IconClassName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("iconclassname");
			}
		}
		
		/// <summary>
		/// Shows whether the file is checked out.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ischeckedout")]
		public System.Nullable<bool> IsCheckedOut
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ischeckedout");
			}
		}
		
		/// <summary>
		/// Shows whether the file is a folder.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfolder")]
		public System.Nullable<bool> IsFolder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfolder");
			}
		}
		
		/// <summary>
		/// Shows whether to fetch data recursively from the given folder location.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isrecursivefetch")]
		public System.Nullable<bool> IsRecursiveFetch
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isrecursivefetch");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated document location.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("locationid")]
		public string LocationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("locationid");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the SharePoint document was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modified")]
		public System.Nullable<System.DateTime> Modified
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modified");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Shows who modified the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the SharePoint document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Shows the business unit that the record owner belongs to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningBusinessUnit");
				this.SetAttributeValue("owningbusinessunit", value);
				this.OnPropertyChanged("OwningBusinessUnit");
			}
		}
		
		/// <summary>
		/// Shows the team that owns the SharePoint document record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningTeam");
				this.SetAttributeValue("owningteam", value);
				this.OnPropertyChanged("OwningTeam");
			}
		}
		
		/// <summary>
		/// Shows the user who owns the SharePoint document record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningUser");
				this.SetAttributeValue("owninguser", value);
				this.OnPropertyChanged("OwningUser");
			}
		}
		
		/// <summary>
		/// Shows the Read URL of the SharePoint document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readurl")]
		public string ReadUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("readurl");
			}
		}
		
		/// <summary>
		/// Choose the parent record that the SharePoint document record is associated with.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Relative location of Sharepoint Document
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("relativelocation")]
		public string RelativeLocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("relativelocation");
			}
		}
		
		/// <summary>
		/// Shows the service type of the SharePoint site.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicetype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ServiceType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("servicetype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceType");
				this.SetAttributeValue("servicetype", value);
				this.OnPropertyChanged("ServiceType");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the SharePoint document record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointcreatedon")]
		public System.Nullable<System.DateTime> SharePointCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sharepointcreatedon");
			}
		}
		
		/// <summary>
		/// Shows the unique identifier of the SharePoint document record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointdocumentid")]
		public System.Nullable<System.Guid> SharePointDocumentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("sharepointdocumentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SharePointDocumentId");
				this.SetAttributeValue("sharepointdocumentid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("SharePointDocumentId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointdocumentid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SharePointDocumentId = value;
			}
		}
		
		/// <summary>
		/// Shows who last updated the document record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointmodifiedby")]
		public string SharePointModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("sharepointmodifiedby");
			}
		}
		
		/// <summary>
		/// Shows the title or name that describes the SharePoint document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("title");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// Shows the SharePoint document version
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("version")]
		public string Version
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("version");
			}
		}
		
		/// <summary>
		/// 1:N SharePointDocument_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SharePointDocument_Annotation")]
		public System.Collections.Generic.IEnumerable<Entities.Annotation> SharePointDocument_Annotation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Annotation>("SharePointDocument_Annotation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SharePointDocument_Annotation");
				this.SetRelatedEntities<Entities.Annotation>("SharePointDocument_Annotation", null, value);
				this.OnPropertyChanged("SharePointDocument_Annotation");
			}
		}
		
		/// <summary>
		/// N:1 Account_SharepointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_SharepointDocument")]
		public Entities.Account Account_SharepointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Account>("Account_SharepointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Account_SharepointDocument");
				this.SetRelatedEntity<Entities.Account>("Account_SharepointDocument", null, value);
				this.OnPropertyChanged("Account_SharepointDocument");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_sharepointdocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_sharepointdocument")]
		public Entities.BusinessUnit business_unit_sharepointdocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.BusinessUnit>("business_unit_sharepointdocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("business_unit_sharepointdocument");
				this.SetRelatedEntity<Entities.BusinessUnit>("business_unit_sharepointdocument", null, value);
				this.OnPropertyChanged("business_unit_sharepointdocument");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_sharepointdocument2
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_sharepointdocument2")]
		public Entities.BusinessUnit business_unit_sharepointdocument2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.BusinessUnit>("business_unit_sharepointdocument2", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("business_unit_sharepointdocument2");
				this.SetRelatedEntity<Entities.BusinessUnit>("business_unit_sharepointdocument2", null, value);
				this.OnPropertyChanged("business_unit_sharepointdocument2");
			}
		}
		
		/// <summary>
		/// N:1 KbArticle_SharepointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KbArticle_SharepointDocument")]
		public Entities.KbArticle KbArticle_SharepointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.KbArticle>("KbArticle_SharepointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("KbArticle_SharepointDocument");
				this.SetRelatedEntity<Entities.KbArticle>("KbArticle_SharepointDocument", null, value);
				this.OnPropertyChanged("KbArticle_SharepointDocument");
			}
		}
		
		/// <summary>
		/// N:1 Lead_SharepointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_SharepointDocument")]
		public Entities.Lead Lead_SharepointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Lead>("Lead_SharepointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Lead_SharepointDocument");
				this.SetRelatedEntity<Entities.Lead>("Lead_SharepointDocument", null, value);
				this.OnPropertyChanged("Lead_SharepointDocument");
			}
		}
		
		/// <summary>
		/// N:1 lk_sharepointdocumentbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_sharepointdocumentbase_createdby")]
		public Entities.SystemUser lk_sharepointdocumentbase_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_createdby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_sharepointdocumentbase_createdby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_createdby", null, value);
				this.OnPropertyChanged("lk_sharepointdocumentbase_createdby");
			}
		}
		
		/// <summary>
		/// N:1 lk_sharepointdocumentbase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_sharepointdocumentbase_createdonbehalfby")]
		public Entities.SystemUser lk_sharepointdocumentbase_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_sharepointdocumentbase_createdonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_sharepointdocumentbase_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_sharepointdocumentbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_sharepointdocumentbase_modifiedby")]
		public Entities.SystemUser lk_sharepointdocumentbase_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_modifiedby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_sharepointdocumentbase_modifiedby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_modifiedby", null, value);
				this.OnPropertyChanged("lk_sharepointdocumentbase_modifiedby");
			}
		}
		
		/// <summary>
		/// N:1 lk_sharepointdocumentbase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_sharepointdocumentbase_modifiedonbehalfby")]
		public Entities.SystemUser lk_sharepointdocumentbase_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_sharepointdocumentbase_modifiedonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_sharepointdocumentbase_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_sharepointdocumentbase_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 Opportunity_SharepointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_SharepointDocument")]
		public Entities.Opportunity Opportunity_SharepointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Opportunity>("Opportunity_SharepointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Opportunity_SharepointDocument");
				this.SetRelatedEntity<Entities.Opportunity>("Opportunity_SharepointDocument", null, value);
				this.OnPropertyChanged("Opportunity_SharepointDocument");
			}
		}
		
		/// <summary>
		/// N:1 organization_sharepointdocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_sharepointdocument")]
		public Entities.Organization organization_sharepointdocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Organization>("organization_sharepointdocument", null);
			}
		}
		
		/// <summary>
		/// N:1 Product_SharepointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Product_SharepointDocument")]
		public Entities.Product Product_SharepointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Product>("Product_SharepointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Product_SharepointDocument");
				this.SetRelatedEntity<Entities.Product>("Product_SharepointDocument", null, value);
				this.OnPropertyChanged("Product_SharepointDocument");
			}
		}
		
		/// <summary>
		/// N:1 Quote_SharepointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Quote_SharepointDocument")]
		public Entities.Quote Quote_SharepointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Quote>("Quote_SharepointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Quote_SharepointDocument");
				this.SetRelatedEntity<Entities.Quote>("Quote_SharepointDocument", null, value);
				this.OnPropertyChanged("Quote_SharepointDocument");
			}
		}
		
		/// <summary>
		/// N:1 SalesLiterature_SharepointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SalesLiterature_SharepointDocument")]
		public Entities.SalesLiterature SalesLiterature_SharepointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SalesLiterature>("SalesLiterature_SharepointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SalesLiterature_SharepointDocument");
				this.SetRelatedEntity<Entities.SalesLiterature>("SalesLiterature_SharepointDocument", null, value);
				this.OnPropertyChanged("SalesLiterature_SharepointDocument");
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_SharePointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SharePointDocument")]
		public Entities.TransactionCurrency TransactionCurrency_SharePointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.TransactionCurrency>("TransactionCurrency_SharePointDocument", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public SharePointDocument(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["sharepointdocumentid"] = base.Id;
                        break;
                    case "sharepointdocumentid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("documentlocationtype")]
		public virtual SharePointDocumentLocation_LocationType? DocumentLocationTypeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((SharePointDocumentLocation_LocationType?)(EntityOptionSetEnum.GetEnum(this, "documentlocationtype")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicetype")]
		public virtual sharepointsite_ServiceType? ServiceTypeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((sharepointsite_ServiceType?)(EntityOptionSetEnum.GetEnum(this, "servicetype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				ServiceType = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}