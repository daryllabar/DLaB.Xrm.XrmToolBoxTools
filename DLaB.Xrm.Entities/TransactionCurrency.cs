//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.Xrm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public enum TransactionCurrencyState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Currency in which a financial transaction is carried out.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("transactioncurrency")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public partial class TransactionCurrency : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CurrencyName = "currencyname";
			public const string CurrencyPrecision = "currencyprecision";
			public const string CurrencySymbol = "currencysymbol";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ISOCurrencyCode = "isocurrencycode";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string Id = "transactioncurrencyid";
			public const string VersionNumber = "versionnumber";
			public const string lk_transactioncurrency_createdonbehalfby = "lk_transactioncurrency_createdonbehalfby";
			public const string lk_transactioncurrency_modifiedonbehalfby = "lk_transactioncurrency_modifiedonbehalfby";
			public const string lk_transactioncurrencybase_createdby = "lk_transactioncurrencybase_createdby";
			public const string lk_transactioncurrencybase_modifiedby = "lk_transactioncurrencybase_modifiedby";
			public const string organization_transactioncurrencies = "organization_transactioncurrencies";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TransactionCurrency() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "transactioncurrency";
		
		public const int EntityTypeCode = 9105;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the transaction currency was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the transactioncurrency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Name of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyname")]
		public string CurrencyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("currencyname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrencyName");
				this.SetAttributeValue("currencyname", value);
				this.OnPropertyChanged("CurrencyName");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyprecision")]
		public System.Nullable<int> CurrencyPrecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currencyprecision");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrencyPrecision");
				this.SetAttributeValue("currencyprecision", value);
				this.OnPropertyChanged("CurrencyPrecision");
			}
		}
		
		/// <summary>
		/// Symbol for the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencysymbol")]
		public string CurrencySymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("currencysymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrencySymbol");
				this.SetAttributeValue("currencysymbol", value);
				this.OnPropertyChanged("CurrencySymbol");
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityImage");
				this.SetAttributeValue("entityimage", value);
				this.OnPropertyChanged("EntityImage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Exchange rate between the transaction currency and the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExchangeRate");
				this.SetAttributeValue("exchangerate", value);
				this.OnPropertyChanged("ExchangeRate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// ISO currency code for the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isocurrencycode")]
		public string ISOCurrencyCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("isocurrencycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ISOCurrencyCode");
				this.SetAttributeValue("isocurrencycode", value);
				this.OnPropertyChanged("ISOCurrencyCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Date and time when the transaction currency was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the transactioncurrency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Entities.TransactionCurrencyState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Entities.TransactionCurrencyState)(System.Enum.ToObject(typeof(Entities.TransactionCurrencyState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public System.Nullable<System.Guid> TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.TransactionCurrencyId = value;
			}
		}
		
		/// <summary>
		/// Version number of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N basecurrency_organization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("basecurrency_organization")]
		public System.Collections.Generic.IEnumerable<Entities.Organization> basecurrency_organization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Organization>("basecurrency_organization", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("basecurrency_organization");
				this.SetRelatedEntities<Entities.Organization>("basecurrency_organization", null, value);
				this.OnPropertyChanged("basecurrency_organization");
			}
		}
		
		/// <summary>
		/// 1:N DynamicPropertyAssociation_TransactionCurrency
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("DynamicPropertyAssociation_TransactionCurrency")]
		public System.Collections.Generic.IEnumerable<Entities.DynamicPropertyAssociation> DynamicPropertyAssociation_TransactionCurrency
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DynamicPropertyAssociation>("DynamicPropertyAssociation_TransactionCurrency", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DynamicPropertyAssociation_TransactionCurrency");
				this.SetRelatedEntities<Entities.DynamicPropertyAssociation>("DynamicPropertyAssociation_TransactionCurrency", null, value);
				this.OnPropertyChanged("DynamicPropertyAssociation_TransactionCurrency");
			}
		}
		
		/// <summary>
		/// 1:N DynamicPropertyOptionSetItem_TransactionCurrency
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("DynamicPropertyOptionSetItem_TransactionCurrency")]
		public System.Collections.Generic.IEnumerable<Entities.DynamicPropertyOptionSetItem> DynamicPropertyOptionSetItem_TransactionCurrency
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DynamicPropertyOptionSetItem>("DynamicPropertyOptionSetItem_TransactionCurrency", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DynamicPropertyOptionSetItem_TransactionCurrency");
				this.SetRelatedEntities<Entities.DynamicPropertyOptionSetItem>("DynamicPropertyOptionSetItem_TransactionCurrency", null, value);
				this.OnPropertyChanged("DynamicPropertyOptionSetItem_TransactionCurrency");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_account")]
		public System.Collections.Generic.IEnumerable<Entities.Account> transactioncurrency_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Account>("transactioncurrency_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_account");
				this.SetRelatedEntities<Entities.Account>("transactioncurrency_account", null, value);
				this.OnPropertyChanged("transactioncurrency_account");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ActivityPointer
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ActivityPointer")]
		public System.Collections.Generic.IEnumerable<Entities.ActivityPointer> TransactionCurrency_ActivityPointer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ActivityPointer>("TransactionCurrency_ActivityPointer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ActivityPointer");
				this.SetRelatedEntities<Entities.ActivityPointer>("TransactionCurrency_ActivityPointer", null, value);
				this.OnPropertyChanged("TransactionCurrency_ActivityPointer");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_annualfiscalcalendar
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_annualfiscalcalendar")]
		public System.Collections.Generic.IEnumerable<Entities.AnnualFiscalCalendar> transactioncurrency_annualfiscalcalendar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.AnnualFiscalCalendar>("transactioncurrency_annualfiscalcalendar", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_annualfiscalcalendar");
				this.SetRelatedEntities<Entities.AnnualFiscalCalendar>("transactioncurrency_annualfiscalcalendar", null, value);
				this.OnPropertyChanged("transactioncurrency_annualfiscalcalendar");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Appointment")]
		public System.Collections.Generic.IEnumerable<Entities.Appointment> TransactionCurrency_Appointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Appointment>("TransactionCurrency_Appointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Appointment");
				this.SetRelatedEntities<Entities.Appointment>("TransactionCurrency_Appointment", null, value);
				this.OnPropertyChanged("TransactionCurrency_Appointment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Entities.AsyncOperation> TransactionCurrency_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.AsyncOperation>("TransactionCurrency_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_AsyncOperations");
				this.SetRelatedEntities<Entities.AsyncOperation>("TransactionCurrency_AsyncOperations", null, value);
				this.OnPropertyChanged("TransactionCurrency_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_BusinessUnit
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_BusinessUnit")]
		public System.Collections.Generic.IEnumerable<Entities.BusinessUnit> TransactionCurrency_BusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.BusinessUnit>("TransactionCurrency_BusinessUnit", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_BusinessUnit");
				this.SetRelatedEntities<Entities.BusinessUnit>("TransactionCurrency_BusinessUnit", null, value);
				this.OnPropertyChanged("TransactionCurrency_BusinessUnit");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_campaign
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_campaign")]
		public System.Collections.Generic.IEnumerable<Entities.Campaign> transactioncurrency_campaign
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Campaign>("transactioncurrency_campaign", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_campaign");
				this.SetRelatedEntities<Entities.Campaign>("transactioncurrency_campaign", null, value);
				this.OnPropertyChanged("transactioncurrency_campaign");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_campaignactivity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_campaignactivity")]
		public System.Collections.Generic.IEnumerable<Entities.CampaignActivity> transactioncurrency_campaignactivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.CampaignActivity>("transactioncurrency_campaignactivity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_campaignactivity");
				this.SetRelatedEntities<Entities.CampaignActivity>("transactioncurrency_campaignactivity", null, value);
				this.OnPropertyChanged("transactioncurrency_campaignactivity");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_CampaignResponse
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_CampaignResponse")]
		public System.Collections.Generic.IEnumerable<Entities.CampaignResponse> TransactionCurrency_CampaignResponse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.CampaignResponse>("TransactionCurrency_CampaignResponse", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_CampaignResponse");
				this.SetRelatedEntities<Entities.CampaignResponse>("TransactionCurrency_CampaignResponse", null, value);
				this.OnPropertyChanged("TransactionCurrency_CampaignResponse");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ChannelAccessProfile
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ChannelAccessProfile")]
		public System.Collections.Generic.IEnumerable<Entities.ChannelAccessProfile> TransactionCurrency_ChannelAccessProfile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ChannelAccessProfile>("TransactionCurrency_ChannelAccessProfile", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ChannelAccessProfile");
				this.SetRelatedEntities<Entities.ChannelAccessProfile>("TransactionCurrency_ChannelAccessProfile", null, value);
				this.OnPropertyChanged("TransactionCurrency_ChannelAccessProfile");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_competitor
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_competitor")]
		public System.Collections.Generic.IEnumerable<Entities.Competitor> transactioncurrency_competitor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Competitor>("transactioncurrency_competitor", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_competitor");
				this.SetRelatedEntities<Entities.Competitor>("transactioncurrency_competitor", null, value);
				this.OnPropertyChanged("transactioncurrency_competitor");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Connection
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Connection")]
		public System.Collections.Generic.IEnumerable<Entities.Connection> TransactionCurrency_Connection
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Connection>("TransactionCurrency_Connection", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Connection");
				this.SetRelatedEntities<Entities.Connection>("TransactionCurrency_Connection", null, value);
				this.OnPropertyChanged("TransactionCurrency_Connection");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contact")]
		public System.Collections.Generic.IEnumerable<Entities.Contact> transactioncurrency_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Contact>("transactioncurrency_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_contact");
				this.SetRelatedEntities<Entities.Contact>("transactioncurrency_contact", null, value);
				this.OnPropertyChanged("transactioncurrency_contact");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_contract
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contract")]
		public System.Collections.Generic.IEnumerable<Entities.Contract> transactioncurrency_contract
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Contract>("transactioncurrency_contract", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_contract");
				this.SetRelatedEntities<Entities.Contract>("transactioncurrency_contract", null, value);
				this.OnPropertyChanged("transactioncurrency_contract");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_contractdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contractdetail")]
		public System.Collections.Generic.IEnumerable<Entities.ContractDetail> transactioncurrency_contractdetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ContractDetail>("transactioncurrency_contractdetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_contractdetail");
				this.SetRelatedEntities<Entities.ContractDetail>("transactioncurrency_contractdetail", null, value);
				this.OnPropertyChanged("transactioncurrency_contractdetail");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ConvertRule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ConvertRule")]
		public System.Collections.Generic.IEnumerable<Entities.ConvertRule> TransactionCurrency_ConvertRule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ConvertRule>("TransactionCurrency_ConvertRule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ConvertRule");
				this.SetRelatedEntities<Entities.ConvertRule>("TransactionCurrency_ConvertRule", null, value);
				this.OnPropertyChanged("TransactionCurrency_ConvertRule");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_convertruleitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_convertruleitem")]
		public System.Collections.Generic.IEnumerable<Entities.ConvertRuleItem> transactioncurrency_convertruleitem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ConvertRuleItem>("transactioncurrency_convertruleitem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_convertruleitem");
				this.SetRelatedEntities<Entities.ConvertRuleItem>("transactioncurrency_convertruleitem", null, value);
				this.OnPropertyChanged("transactioncurrency_convertruleitem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_CustomerAddress
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_CustomerAddress")]
		public System.Collections.Generic.IEnumerable<Entities.CustomerAddress> TransactionCurrency_CustomerAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.CustomerAddress>("TransactionCurrency_CustomerAddress", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_CustomerAddress");
				this.SetRelatedEntities<Entities.CustomerAddress>("TransactionCurrency_CustomerAddress", null, value);
				this.OnPropertyChanged("TransactionCurrency_CustomerAddress");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_discount
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_discount")]
		public System.Collections.Generic.IEnumerable<Entities.Discount> transactioncurrency_discount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Discount>("transactioncurrency_discount", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_discount");
				this.SetRelatedEntities<Entities.Discount>("transactioncurrency_discount", null, value);
				this.OnPropertyChanged("transactioncurrency_discount");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_discounttype
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_discounttype")]
		public System.Collections.Generic.IEnumerable<Entities.DiscountType> transactioncurrency_discounttype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DiscountType>("transactioncurrency_discounttype", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_discounttype");
				this.SetRelatedEntities<Entities.DiscountType>("transactioncurrency_discounttype", null, value);
				this.OnPropertyChanged("transactioncurrency_discounttype");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> TransactionCurrency_DuplicateBaseRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DuplicateRecord>("TransactionCurrency_DuplicateBaseRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_DuplicateBaseRecord");
				this.SetRelatedEntities<Entities.DuplicateRecord>("TransactionCurrency_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("TransactionCurrency_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> TransactionCurrency_DuplicateMatchingRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DuplicateRecord>("TransactionCurrency_DuplicateMatchingRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_DuplicateMatchingRecord");
				this.SetRelatedEntities<Entities.DuplicateRecord>("TransactionCurrency_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("TransactionCurrency_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Dynamicpropertyinsatance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Dynamicpropertyinsatance")]
		public System.Collections.Generic.IEnumerable<Entities.DynamicPropertyInstance> TransactionCurrency_Dynamicpropertyinsatance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DynamicPropertyInstance>("TransactionCurrency_Dynamicpropertyinsatance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Dynamicpropertyinsatance");
				this.SetRelatedEntities<Entities.DynamicPropertyInstance>("TransactionCurrency_Dynamicpropertyinsatance", null, value);
				this.OnPropertyChanged("TransactionCurrency_Dynamicpropertyinsatance");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Email
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Email")]
		public System.Collections.Generic.IEnumerable<Entities.Email> TransactionCurrency_Email
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Email>("TransactionCurrency_Email", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Email");
				this.SetRelatedEntities<Entities.Email>("TransactionCurrency_Email", null, value);
				this.OnPropertyChanged("TransactionCurrency_Email");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Entitlement")]
		public System.Collections.Generic.IEnumerable<Entities.Entitlement> TransactionCurrency_Entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Entitlement>("TransactionCurrency_Entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Entitlement");
				this.SetRelatedEntities<Entities.Entitlement>("TransactionCurrency_Entitlement", null, value);
				this.OnPropertyChanged("TransactionCurrency_Entitlement");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_entitlementchannel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementchannel")]
		public System.Collections.Generic.IEnumerable<Entities.EntitlementChannel> TransactionCurrency_entitlementchannel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.EntitlementChannel>("TransactionCurrency_entitlementchannel", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_entitlementchannel");
				this.SetRelatedEntities<Entities.EntitlementChannel>("TransactionCurrency_entitlementchannel", null, value);
				this.OnPropertyChanged("TransactionCurrency_entitlementchannel");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_entitlementtemplate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementtemplate")]
		public System.Collections.Generic.IEnumerable<Entities.EntitlementTemplate> TransactionCurrency_entitlementtemplate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.EntitlementTemplate>("TransactionCurrency_entitlementtemplate", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_entitlementtemplate");
				this.SetRelatedEntities<Entities.EntitlementTemplate>("TransactionCurrency_entitlementtemplate", null, value);
				this.OnPropertyChanged("TransactionCurrency_entitlementtemplate");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_entitlementtemplatechannel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementtemplatechannel")]
		public System.Collections.Generic.IEnumerable<Entities.EntitlementTemplateChannel> TransactionCurrency_entitlementtemplatechannel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.EntitlementTemplateChannel>("TransactionCurrency_entitlementtemplatechannel", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_entitlementtemplatechannel");
				this.SetRelatedEntities<Entities.EntitlementTemplateChannel>("TransactionCurrency_entitlementtemplatechannel", null, value);
				this.OnPropertyChanged("TransactionCurrency_entitlementtemplatechannel");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Equipment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Equipment")]
		public System.Collections.Generic.IEnumerable<Entities.Equipment> TransactionCurrency_Equipment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Equipment>("TransactionCurrency_Equipment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Equipment");
				this.SetRelatedEntities<Entities.Equipment>("TransactionCurrency_Equipment", null, value);
				this.OnPropertyChanged("TransactionCurrency_Equipment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ExternalParty
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ExternalParty")]
		public System.Collections.Generic.IEnumerable<Entities.ExternalParty> TransactionCurrency_ExternalParty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ExternalParty>("TransactionCurrency_ExternalParty", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ExternalParty");
				this.SetRelatedEntities<Entities.ExternalParty>("TransactionCurrency_ExternalParty", null, value);
				this.OnPropertyChanged("TransactionCurrency_ExternalParty");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_externalpartyitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_externalpartyitem")]
		public System.Collections.Generic.IEnumerable<Entities.ExternalPartyItem> TransactionCurrency_externalpartyitem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ExternalPartyItem>("TransactionCurrency_externalpartyitem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_externalpartyitem");
				this.SetRelatedEntities<Entities.ExternalPartyItem>("TransactionCurrency_externalpartyitem", null, value);
				this.OnPropertyChanged("TransactionCurrency_externalpartyitem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Fax
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Fax")]
		public System.Collections.Generic.IEnumerable<Entities.Fax> TransactionCurrency_Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Fax>("TransactionCurrency_Fax", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Fax");
				this.SetRelatedEntities<Entities.Fax>("TransactionCurrency_Fax", null, value);
				this.OnPropertyChanged("TransactionCurrency_Fax");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_fixedmonthlyfiscalcalendar
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_fixedmonthlyfiscalcalendar")]
		public System.Collections.Generic.IEnumerable<Entities.FixedMonthlyFiscalCalendar> transactioncurrency_fixedmonthlyfiscalcalendar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.FixedMonthlyFiscalCalendar>("transactioncurrency_fixedmonthlyfiscalcalendar", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_fixedmonthlyfiscalcalendar");
				this.SetRelatedEntities<Entities.FixedMonthlyFiscalCalendar>("transactioncurrency_fixedmonthlyfiscalcalendar", null, value);
				this.OnPropertyChanged("transactioncurrency_fixedmonthlyfiscalcalendar");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Goal
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Goal")]
		public System.Collections.Generic.IEnumerable<Entities.Goal> TransactionCurrency_Goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Goal>("TransactionCurrency_Goal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Goal");
				this.SetRelatedEntities<Entities.Goal>("TransactionCurrency_Goal", null, value);
				this.OnPropertyChanged("TransactionCurrency_Goal");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Incident")]
		public System.Collections.Generic.IEnumerable<Entities.Incident> TransactionCurrency_Incident
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Incident>("TransactionCurrency_Incident", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Incident");
				this.SetRelatedEntities<Entities.Incident>("TransactionCurrency_Incident", null, value);
				this.OnPropertyChanged("TransactionCurrency_Incident");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_invoice
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_invoice")]
		public System.Collections.Generic.IEnumerable<Entities.Invoice> transactioncurrency_invoice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Invoice>("transactioncurrency_invoice", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_invoice");
				this.SetRelatedEntities<Entities.Invoice>("transactioncurrency_invoice", null, value);
				this.OnPropertyChanged("transactioncurrency_invoice");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_invoicedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_invoicedetail")]
		public System.Collections.Generic.IEnumerable<Entities.InvoiceDetail> transactioncurrency_invoicedetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.InvoiceDetail>("transactioncurrency_invoicedetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_invoicedetail");
				this.SetRelatedEntities<Entities.InvoiceDetail>("transactioncurrency_invoicedetail", null, value);
				this.OnPropertyChanged("transactioncurrency_invoicedetail");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_KbArticle
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_KbArticle")]
		public System.Collections.Generic.IEnumerable<Entities.KbArticle> TransactionCurrency_KbArticle
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.KbArticle>("TransactionCurrency_KbArticle", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_KbArticle");
				this.SetRelatedEntities<Entities.KbArticle>("TransactionCurrency_KbArticle", null, value);
				this.OnPropertyChanged("TransactionCurrency_KbArticle");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_knowledgearticle
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_knowledgearticle")]
		public System.Collections.Generic.IEnumerable<Entities.KnowledgeArticle> TransactionCurrency_knowledgearticle
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.KnowledgeArticle>("TransactionCurrency_knowledgearticle", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_knowledgearticle");
				this.SetRelatedEntities<Entities.KnowledgeArticle>("TransactionCurrency_knowledgearticle", null, value);
				this.OnPropertyChanged("TransactionCurrency_knowledgearticle");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_knowledgearticleincident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_knowledgearticleincident")]
		public System.Collections.Generic.IEnumerable<Entities.KnowledgeArticleIncident> transactioncurrency_knowledgearticleincident
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.KnowledgeArticleIncident>("transactioncurrency_knowledgearticleincident", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_knowledgearticleincident");
				this.SetRelatedEntities<Entities.KnowledgeArticleIncident>("transactioncurrency_knowledgearticleincident", null, value);
				this.OnPropertyChanged("transactioncurrency_knowledgearticleincident");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_knowledgearticleviews
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_knowledgearticleviews")]
		public System.Collections.Generic.IEnumerable<Entities.KnowledgeArticleViews> transactioncurrency_knowledgearticleviews
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.KnowledgeArticleViews>("transactioncurrency_knowledgearticleviews", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_knowledgearticleviews");
				this.SetRelatedEntities<Entities.KnowledgeArticleViews>("transactioncurrency_knowledgearticleviews", null, value);
				this.OnPropertyChanged("transactioncurrency_knowledgearticleviews");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_KnowledgeBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_KnowledgeBaseRecord")]
		public System.Collections.Generic.IEnumerable<Entities.KnowledgeBaseRecord> TransactionCurrency_KnowledgeBaseRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.KnowledgeBaseRecord>("TransactionCurrency_KnowledgeBaseRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_KnowledgeBaseRecord");
				this.SetRelatedEntities<Entities.KnowledgeBaseRecord>("TransactionCurrency_KnowledgeBaseRecord", null, value);
				this.OnPropertyChanged("TransactionCurrency_KnowledgeBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_lead
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_lead")]
		public System.Collections.Generic.IEnumerable<Entities.Lead> transactioncurrency_lead
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Lead>("transactioncurrency_lead", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_lead");
				this.SetRelatedEntities<Entities.Lead>("transactioncurrency_lead", null, value);
				this.OnPropertyChanged("transactioncurrency_lead");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_LeadAddress
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_LeadAddress")]
		public System.Collections.Generic.IEnumerable<Entities.LeadAddress> TransactionCurrency_LeadAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.LeadAddress>("TransactionCurrency_LeadAddress", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_LeadAddress");
				this.SetRelatedEntities<Entities.LeadAddress>("TransactionCurrency_LeadAddress", null, value);
				this.OnPropertyChanged("TransactionCurrency_LeadAddress");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Letter
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Letter")]
		public System.Collections.Generic.IEnumerable<Entities.Letter> TransactionCurrency_Letter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Letter>("TransactionCurrency_Letter", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Letter");
				this.SetRelatedEntities<Entities.Letter>("TransactionCurrency_Letter", null, value);
				this.OnPropertyChanged("TransactionCurrency_Letter");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_list
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_list")]
		public System.Collections.Generic.IEnumerable<Entities.List> transactioncurrency_list
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.List>("transactioncurrency_list", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_list");
				this.SetRelatedEntities<Entities.List>("transactioncurrency_list", null, value);
				this.OnPropertyChanged("transactioncurrency_list");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_MailMergeTemplate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_MailMergeTemplate")]
		public System.Collections.Generic.IEnumerable<Entities.MailMergeTemplate> TransactionCurrency_MailMergeTemplate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.MailMergeTemplate>("TransactionCurrency_MailMergeTemplate", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_MailMergeTemplate");
				this.SetRelatedEntities<Entities.MailMergeTemplate>("TransactionCurrency_MailMergeTemplate", null, value);
				this.OnPropertyChanged("TransactionCurrency_MailMergeTemplate");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_monthlyfiscalcalendar
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_monthlyfiscalcalendar")]
		public System.Collections.Generic.IEnumerable<Entities.MonthlyFiscalCalendar> transactioncurrency_monthlyfiscalcalendar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.MonthlyFiscalCalendar>("transactioncurrency_monthlyfiscalcalendar", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_monthlyfiscalcalendar");
				this.SetRelatedEntities<Entities.MonthlyFiscalCalendar>("transactioncurrency_monthlyfiscalcalendar", null, value);
				this.OnPropertyChanged("transactioncurrency_monthlyfiscalcalendar");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_officegraphdocument
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_officegraphdocument")]
		public System.Collections.Generic.IEnumerable<Entities.OfficeGraphDocument> TransactionCurrency_officegraphdocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.OfficeGraphDocument>("TransactionCurrency_officegraphdocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_officegraphdocument");
				this.SetRelatedEntities<Entities.OfficeGraphDocument>("TransactionCurrency_officegraphdocument", null, value);
				this.OnPropertyChanged("TransactionCurrency_officegraphdocument");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_opportunity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_opportunity")]
		public System.Collections.Generic.IEnumerable<Entities.Opportunity> transactioncurrency_opportunity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Opportunity>("transactioncurrency_opportunity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_opportunity");
				this.SetRelatedEntities<Entities.Opportunity>("transactioncurrency_opportunity", null, value);
				this.OnPropertyChanged("transactioncurrency_opportunity");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_opportunityclose
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_opportunityclose")]
		public System.Collections.Generic.IEnumerable<Entities.OpportunityClose> transactioncurrency_opportunityclose
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.OpportunityClose>("transactioncurrency_opportunityclose", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_opportunityclose");
				this.SetRelatedEntities<Entities.OpportunityClose>("transactioncurrency_opportunityclose", null, value);
				this.OnPropertyChanged("transactioncurrency_opportunityclose");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_opportunityproduct
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_opportunityproduct")]
		public System.Collections.Generic.IEnumerable<Entities.OpportunityProduct> transactioncurrency_opportunityproduct
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.OpportunityProduct>("transactioncurrency_opportunityproduct", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_opportunityproduct");
				this.SetRelatedEntities<Entities.OpportunityProduct>("transactioncurrency_opportunityproduct", null, value);
				this.OnPropertyChanged("transactioncurrency_opportunityproduct");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_PhoneCall
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_PhoneCall")]
		public System.Collections.Generic.IEnumerable<Entities.PhoneCall> TransactionCurrency_PhoneCall
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.PhoneCall>("TransactionCurrency_PhoneCall", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_PhoneCall");
				this.SetRelatedEntities<Entities.PhoneCall>("TransactionCurrency_PhoneCall", null, value);
				this.OnPropertyChanged("TransactionCurrency_PhoneCall");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_position
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_position")]
		public System.Collections.Generic.IEnumerable<Entities.Position> transactioncurrency_position
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Position>("transactioncurrency_position", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_position");
				this.SetRelatedEntities<Entities.Position>("transactioncurrency_position", null, value);
				this.OnPropertyChanged("transactioncurrency_position");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_pricelevel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_pricelevel")]
		public System.Collections.Generic.IEnumerable<Entities.PriceLevel> transactioncurrency_pricelevel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.PriceLevel>("transactioncurrency_pricelevel", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_pricelevel");
				this.SetRelatedEntities<Entities.PriceLevel>("transactioncurrency_pricelevel", null, value);
				this.OnPropertyChanged("transactioncurrency_pricelevel");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Entities.ProcessSession> TransactionCurrency_ProcessSessions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ProcessSession>("TransactionCurrency_ProcessSessions", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ProcessSessions");
				this.SetRelatedEntities<Entities.ProcessSession>("TransactionCurrency_ProcessSessions", null, value);
				this.OnPropertyChanged("TransactionCurrency_ProcessSessions");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_product
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_product")]
		public System.Collections.Generic.IEnumerable<Entities.Product> transactioncurrency_product
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Product>("transactioncurrency_product", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_product");
				this.SetRelatedEntities<Entities.Product>("transactioncurrency_product", null, value);
				this.OnPropertyChanged("transactioncurrency_product");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_ProductAssociation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_ProductAssociation")]
		public System.Collections.Generic.IEnumerable<Entities.ProductAssociation> transactioncurrency_ProductAssociation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ProductAssociation>("transactioncurrency_ProductAssociation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_ProductAssociation");
				this.SetRelatedEntities<Entities.ProductAssociation>("transactioncurrency_ProductAssociation", null, value);
				this.OnPropertyChanged("transactioncurrency_ProductAssociation");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_productpricelevel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_productpricelevel")]
		public System.Collections.Generic.IEnumerable<Entities.ProductPriceLevel> transactioncurrency_productpricelevel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ProductPriceLevel>("transactioncurrency_productpricelevel", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_productpricelevel");
				this.SetRelatedEntities<Entities.ProductPriceLevel>("transactioncurrency_productpricelevel", null, value);
				this.OnPropertyChanged("transactioncurrency_productpricelevel");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_ProductSubstitute
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_ProductSubstitute")]
		public System.Collections.Generic.IEnumerable<Entities.ProductSubstitute> transactioncurrency_ProductSubstitute
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ProductSubstitute>("transactioncurrency_ProductSubstitute", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_ProductSubstitute");
				this.SetRelatedEntities<Entities.ProductSubstitute>("transactioncurrency_ProductSubstitute", null, value);
				this.OnPropertyChanged("transactioncurrency_ProductSubstitute");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_profilerule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_profilerule")]
		public System.Collections.Generic.IEnumerable<Entities.ChannelAccessProfileRule> TransactionCurrency_profilerule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ChannelAccessProfileRule>("TransactionCurrency_profilerule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_profilerule");
				this.SetRelatedEntities<Entities.ChannelAccessProfileRule>("TransactionCurrency_profilerule", null, value);
				this.OnPropertyChanged("TransactionCurrency_profilerule");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_profileruleitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_profileruleitem")]
		public System.Collections.Generic.IEnumerable<Entities.ChannelAccessProfileRuleItem> TransactionCurrency_profileruleitem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ChannelAccessProfileRuleItem>("TransactionCurrency_profileruleitem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_profileruleitem");
				this.SetRelatedEntities<Entities.ChannelAccessProfileRuleItem>("TransactionCurrency_profileruleitem", null, value);
				this.OnPropertyChanged("TransactionCurrency_profileruleitem");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_quarterlyfiscalcalendar
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_quarterlyfiscalcalendar")]
		public System.Collections.Generic.IEnumerable<Entities.QuarterlyFiscalCalendar> transactioncurrency_quarterlyfiscalcalendar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.QuarterlyFiscalCalendar>("transactioncurrency_quarterlyfiscalcalendar", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_quarterlyfiscalcalendar");
				this.SetRelatedEntities<Entities.QuarterlyFiscalCalendar>("transactioncurrency_quarterlyfiscalcalendar", null, value);
				this.OnPropertyChanged("transactioncurrency_quarterlyfiscalcalendar");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Queue
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Queue")]
		public System.Collections.Generic.IEnumerable<Entities.Queue> TransactionCurrency_Queue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Queue>("TransactionCurrency_Queue", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Queue");
				this.SetRelatedEntities<Entities.Queue>("TransactionCurrency_Queue", null, value);
				this.OnPropertyChanged("TransactionCurrency_Queue");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_QueueItem")]
		public System.Collections.Generic.IEnumerable<Entities.QueueItem> TransactionCurrency_QueueItem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.QueueItem>("TransactionCurrency_QueueItem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_QueueItem");
				this.SetRelatedEntities<Entities.QueueItem>("TransactionCurrency_QueueItem", null, value);
				this.OnPropertyChanged("TransactionCurrency_QueueItem");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_quote
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_quote")]
		public System.Collections.Generic.IEnumerable<Entities.Quote> transactioncurrency_quote
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Quote>("transactioncurrency_quote", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_quote");
				this.SetRelatedEntities<Entities.Quote>("transactioncurrency_quote", null, value);
				this.OnPropertyChanged("transactioncurrency_quote");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_quotedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_quotedetail")]
		public System.Collections.Generic.IEnumerable<Entities.QuoteDetail> transactioncurrency_quotedetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.QuoteDetail>("transactioncurrency_quotedetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_quotedetail");
				this.SetRelatedEntities<Entities.QuoteDetail>("transactioncurrency_quotedetail", null, value);
				this.OnPropertyChanged("transactioncurrency_quotedetail");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_RecurringAppointmentMaster
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_RecurringAppointmentMaster")]
		public System.Collections.Generic.IEnumerable<Entities.RecurringAppointmentMaster> TransactionCurrency_RecurringAppointmentMaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.RecurringAppointmentMaster>("TransactionCurrency_RecurringAppointmentMaster", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_RecurringAppointmentMaster");
				this.SetRelatedEntities<Entities.RecurringAppointmentMaster>("TransactionCurrency_RecurringAppointmentMaster", null, value);
				this.OnPropertyChanged("TransactionCurrency_RecurringAppointmentMaster");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ReportCategory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ReportCategory")]
		public System.Collections.Generic.IEnumerable<Entities.ReportCategory> TransactionCurrency_ReportCategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ReportCategory>("TransactionCurrency_ReportCategory", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ReportCategory");
				this.SetRelatedEntities<Entities.ReportCategory>("TransactionCurrency_ReportCategory", null, value);
				this.OnPropertyChanged("TransactionCurrency_ReportCategory");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Routingrule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Routingrule")]
		public System.Collections.Generic.IEnumerable<Entities.RoutingRule> TransactionCurrency_Routingrule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.RoutingRule>("TransactionCurrency_Routingrule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Routingrule");
				this.SetRelatedEntities<Entities.RoutingRule>("TransactionCurrency_Routingrule", null, value);
				this.OnPropertyChanged("TransactionCurrency_Routingrule");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_routingruleitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_routingruleitem")]
		public System.Collections.Generic.IEnumerable<Entities.RoutingRuleItem> TransactionCurrency_routingruleitem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.RoutingRuleItem>("TransactionCurrency_routingruleitem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_routingruleitem");
				this.SetRelatedEntities<Entities.RoutingRuleItem>("TransactionCurrency_routingruleitem", null, value);
				this.OnPropertyChanged("TransactionCurrency_routingruleitem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SalesLiterature
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SalesLiterature")]
		public System.Collections.Generic.IEnumerable<Entities.SalesLiterature> TransactionCurrency_SalesLiterature
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SalesLiterature>("TransactionCurrency_SalesLiterature", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SalesLiterature");
				this.SetRelatedEntities<Entities.SalesLiterature>("TransactionCurrency_SalesLiterature", null, value);
				this.OnPropertyChanged("TransactionCurrency_SalesLiterature");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_salesorder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_salesorder")]
		public System.Collections.Generic.IEnumerable<Entities.SalesOrder> transactioncurrency_salesorder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SalesOrder>("transactioncurrency_salesorder", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_salesorder");
				this.SetRelatedEntities<Entities.SalesOrder>("transactioncurrency_salesorder", null, value);
				this.OnPropertyChanged("transactioncurrency_salesorder");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_salesorderdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_salesorderdetail")]
		public System.Collections.Generic.IEnumerable<Entities.SalesOrderDetail> transactioncurrency_salesorderdetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SalesOrderDetail>("transactioncurrency_salesorderdetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_salesorderdetail");
				this.SetRelatedEntities<Entities.SalesOrderDetail>("transactioncurrency_salesorderdetail", null, value);
				this.OnPropertyChanged("transactioncurrency_salesorderdetail");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_semiannualfiscalcalendar
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_semiannualfiscalcalendar")]
		public System.Collections.Generic.IEnumerable<Entities.SemiAnnualFiscalCalendar> transactioncurrency_semiannualfiscalcalendar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SemiAnnualFiscalCalendar>("transactioncurrency_semiannualfiscalcalendar", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_semiannualfiscalcalendar");
				this.SetRelatedEntities<Entities.SemiAnnualFiscalCalendar>("transactioncurrency_semiannualfiscalcalendar", null, value);
				this.OnPropertyChanged("transactioncurrency_semiannualfiscalcalendar");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ServiceAppointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ServiceAppointment")]
		public System.Collections.Generic.IEnumerable<Entities.ServiceAppointment> TransactionCurrency_ServiceAppointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ServiceAppointment>("TransactionCurrency_ServiceAppointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ServiceAppointment");
				this.SetRelatedEntities<Entities.ServiceAppointment>("TransactionCurrency_ServiceAppointment", null, value);
				this.OnPropertyChanged("TransactionCurrency_ServiceAppointment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SharePointDocument
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SharePointDocument")]
		public System.Collections.Generic.IEnumerable<Entities.SharePointDocument> TransactionCurrency_SharePointDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SharePointDocument>("TransactionCurrency_SharePointDocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SharePointDocument");
				this.SetRelatedEntities<Entities.SharePointDocument>("TransactionCurrency_SharePointDocument", null, value);
				this.OnPropertyChanged("TransactionCurrency_SharePointDocument");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SharePointDocumentLocation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SharePointDocumentLocation")]
		public System.Collections.Generic.IEnumerable<Entities.SharePointDocumentLocation> TransactionCurrency_SharePointDocumentLocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SharePointDocumentLocation>("TransactionCurrency_SharePointDocumentLocation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SharePointDocumentLocation");
				this.SetRelatedEntities<Entities.SharePointDocumentLocation>("TransactionCurrency_SharePointDocumentLocation", null, value);
				this.OnPropertyChanged("TransactionCurrency_SharePointDocumentLocation");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SharePointSite
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SharePointSite")]
		public System.Collections.Generic.IEnumerable<Entities.SharePointSite> TransactionCurrency_SharePointSite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SharePointSite>("TransactionCurrency_SharePointSite", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SharePointSite");
				this.SetRelatedEntities<Entities.SharePointSite>("TransactionCurrency_SharePointSite", null, value);
				this.OnPropertyChanged("TransactionCurrency_SharePointSite");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SimilarityRule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SimilarityRule")]
		public System.Collections.Generic.IEnumerable<Entities.SimilarityRule> TransactionCurrency_SimilarityRule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SimilarityRule>("TransactionCurrency_SimilarityRule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SimilarityRule");
				this.SetRelatedEntities<Entities.SimilarityRule>("TransactionCurrency_SimilarityRule", null, value);
				this.OnPropertyChanged("TransactionCurrency_SimilarityRule");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SLA
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SLA")]
		public System.Collections.Generic.IEnumerable<Entities.SLA> TransactionCurrency_SLA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SLA>("TransactionCurrency_SLA", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SLA");
				this.SetRelatedEntities<Entities.SLA>("TransactionCurrency_SLA", null, value);
				this.OnPropertyChanged("TransactionCurrency_SLA");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SLAItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SLAItem")]
		public System.Collections.Generic.IEnumerable<Entities.SLAItem> TransactionCurrency_SLAItem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SLAItem>("TransactionCurrency_SLAItem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SLAItem");
				this.SetRelatedEntities<Entities.SLAItem>("TransactionCurrency_SLAItem", null, value);
				this.OnPropertyChanged("TransactionCurrency_SLAItem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_slakpiinstance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_slakpiinstance")]
		public System.Collections.Generic.IEnumerable<Entities.SLAKPIInstance> TransactionCurrency_slakpiinstance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SLAKPIInstance>("TransactionCurrency_slakpiinstance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_slakpiinstance");
				this.SetRelatedEntities<Entities.SLAKPIInstance>("TransactionCurrency_slakpiinstance", null, value);
				this.OnPropertyChanged("TransactionCurrency_slakpiinstance");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_socialactivity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_socialactivity")]
		public System.Collections.Generic.IEnumerable<Entities.SocialActivity> transactioncurrency_socialactivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SocialActivity>("transactioncurrency_socialactivity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_socialactivity");
				this.SetRelatedEntities<Entities.SocialActivity>("transactioncurrency_socialactivity", null, value);
				this.OnPropertyChanged("transactioncurrency_socialactivity");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_SocialProfile
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_SocialProfile")]
		public System.Collections.Generic.IEnumerable<Entities.SocialProfile> transactioncurrency_SocialProfile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SocialProfile>("transactioncurrency_SocialProfile", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_SocialProfile");
				this.SetRelatedEntities<Entities.SocialProfile>("transactioncurrency_SocialProfile", null, value);
				this.OnPropertyChanged("transactioncurrency_SocialProfile");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SystemUser
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SystemUser")]
		public System.Collections.Generic.IEnumerable<Entities.SystemUser> TransactionCurrency_SystemUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.SystemUser>("TransactionCurrency_SystemUser", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SystemUser");
				this.SetRelatedEntities<Entities.SystemUser>("TransactionCurrency_SystemUser", null, value);
				this.OnPropertyChanged("TransactionCurrency_SystemUser");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Task
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Task")]
		public System.Collections.Generic.IEnumerable<Entities.Task> TransactionCurrency_Task
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Task>("TransactionCurrency_Task", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Task");
				this.SetRelatedEntities<Entities.Task>("TransactionCurrency_Task", null, value);
				this.OnPropertyChanged("TransactionCurrency_Task");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Team
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Team")]
		public System.Collections.Generic.IEnumerable<Entities.Team> TransactionCurrency_Team
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Team>("TransactionCurrency_Team", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Team");
				this.SetRelatedEntities<Entities.Team>("TransactionCurrency_Team", null, value);
				this.OnPropertyChanged("TransactionCurrency_Team");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Territory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Territory")]
		public System.Collections.Generic.IEnumerable<Entities.Territory> TransactionCurrency_Territory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Territory>("TransactionCurrency_Territory", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Territory");
				this.SetRelatedEntities<Entities.Territory>("TransactionCurrency_Territory", null, value);
				this.OnPropertyChanged("TransactionCurrency_Territory");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Theme
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Theme")]
		public System.Collections.Generic.IEnumerable<Entities.Theme> TransactionCurrency_Theme
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Theme>("TransactionCurrency_Theme", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Theme");
				this.SetRelatedEntities<Entities.Theme>("TransactionCurrency_Theme", null, value);
				this.OnPropertyChanged("TransactionCurrency_Theme");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_UserMapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_UserMapping")]
		public System.Collections.Generic.IEnumerable<Entities.UserMapping> TransactionCurrency_UserMapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.UserMapping>("TransactionCurrency_UserMapping", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_UserMapping");
				this.SetRelatedEntities<Entities.UserMapping>("TransactionCurrency_UserMapping", null, value);
				this.OnPropertyChanged("TransactionCurrency_UserMapping");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_usersettings
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_usersettings")]
		public System.Collections.Generic.IEnumerable<Entities.UserSettings> transactioncurrency_usersettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.UserSettings>("transactioncurrency_usersettings", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("transactioncurrency_usersettings");
				this.SetRelatedEntities<Entities.UserSettings>("transactioncurrency_usersettings", null, value);
				this.OnPropertyChanged("transactioncurrency_usersettings");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_transactioncurrency
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_transactioncurrency")]
		public System.Collections.Generic.IEnumerable<Entities.UserEntityInstanceData> userentityinstancedata_transactioncurrency
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.UserEntityInstanceData>("userentityinstancedata_transactioncurrency", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("userentityinstancedata_transactioncurrency");
				this.SetRelatedEntities<Entities.UserEntityInstanceData>("userentityinstancedata_transactioncurrency", null, value);
				this.OnPropertyChanged("userentityinstancedata_transactioncurrency");
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrency_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_createdonbehalfby")]
		public Entities.SystemUser lk_transactioncurrency_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_transactioncurrency_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_transactioncurrency_createdonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_transactioncurrency_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_transactioncurrency_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrency_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_modifiedonbehalfby")]
		public Entities.SystemUser lk_transactioncurrency_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_transactioncurrency_modifiedonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_transactioncurrency_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrencybase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_createdby")]
		public Entities.SystemUser lk_transactioncurrencybase_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_transactioncurrencybase_createdby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_transactioncurrencybase_createdby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_transactioncurrencybase_createdby", null, value);
				this.OnPropertyChanged("lk_transactioncurrencybase_createdby");
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrencybase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_modifiedby")]
		public Entities.SystemUser lk_transactioncurrencybase_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_transactioncurrencybase_modifiedby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_transactioncurrencybase_modifiedby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_transactioncurrencybase_modifiedby", null, value);
				this.OnPropertyChanged("lk_transactioncurrencybase_modifiedby");
			}
		}
		
		/// <summary>
		/// N:1 organization_transactioncurrencies
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_transactioncurrencies")]
		public Entities.Organization organization_transactioncurrencies
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Organization>("organization_transactioncurrencies", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TransactionCurrency(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["transactioncurrencyid"] = base.Id;
                        break;
                    case "transactioncurrencyid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual TransactionCurrency_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((TransactionCurrency_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}