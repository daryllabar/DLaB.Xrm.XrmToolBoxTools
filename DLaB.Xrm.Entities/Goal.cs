//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.Xrm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public enum GoalState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Target objective for a user or a team for a specified time period.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("goal")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public partial class Goal : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string ActualDecimal = "actualdecimal";
			public const string ActualInteger = "actualinteger";
			public const string ActualMoney = "actualmoney";
			public const string ActualMoney_Base = "actualmoney_base";
			public const string ActualString = "actualstring";
			public const string AmountDataType = "amountdatatype";
			public const string ComputedTargetAsOfTodayDecimal = "computedtargetasoftodaydecimal";
			public const string ComputedTargetAsOfTodayInteger = "computedtargetasoftodayinteger";
			public const string ComputedTargetAsOfTodayMoney = "computedtargetasoftodaymoney";
			public const string ComputedTargetAsOfTodayMoney_Base = "computedtargetasoftodaymoney_base";
			public const string ComputedTargetAsOfTodayPercentageAchieved = "computedtargetasoftodaypercentageachieved";
			public const string ConsiderOnlyGoalOwnersRecords = "consideronlygoalownersrecords";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CustomRollupFieldDecimal = "customrollupfielddecimal";
			public const string CustomRollupFieldInteger = "customrollupfieldinteger";
			public const string CustomRollupFieldMoney = "customrollupfieldmoney";
			public const string CustomRollupFieldMoney_Base = "customrollupfieldmoney_base";
			public const string CustomRollupFieldString = "customrollupfieldstring";
			public const string Depth = "depth";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangeRate = "exchangerate";
			public const string FiscalPeriod = "fiscalperiod";
			public const string FiscalYear = "fiscalyear";
			public const string GoalEndDate = "goalenddate";
			public const string GoalId = "goalid";
			public const string Id = "goalid";
			public const string GoalOwnerId = "goalownerid";
			public const string GoalStartDate = "goalstartdate";
			public const string GoalWithErrorId = "goalwitherrorid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InProgressDecimal = "inprogressdecimal";
			public const string InProgressInteger = "inprogressinteger";
			public const string InProgressMoney = "inprogressmoney";
			public const string InProgressMoney_Base = "inprogressmoney_base";
			public const string InProgressString = "inprogressstring";
			public const string IsAmount = "isamount";
			public const string IsFiscalPeriodGoal = "isfiscalperiodgoal";
			public const string IsOverridden = "isoverridden";
			public const string IsOverride = "isoverride";
			public const string LastRolledupDate = "lastrolledupdate";
			public const string MetricId = "metricid";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentGoalId = "parentgoalid";
			public const string Percentage = "percentage";
			public const string RollupErrorCode = "rolluperrorcode";
			public const string RollupOnlyFromChildGoals = "rolluponlyfromchildgoals";
			public const string RollUpQueryActualDecimalId = "rollupqueryactualdecimalid";
			public const string RollupQueryActualIntegerId = "rollupqueryactualintegerid";
			public const string RollUpQueryActualMoneyId = "rollupqueryactualmoneyid";
			public const string RollUpQueryCustomDecimalId = "rollupquerycustomdecimalid";
			public const string RollUpQueryCustomIntegerId = "rollupquerycustomintegerid";
			public const string RollUpQueryCustomMoneyId = "rollupquerycustommoneyid";
			public const string RollUpQueryInprogressDecimalId = "rollupqueryinprogressdecimalid";
			public const string RollUpQueryInprogressIntegerId = "rollupqueryinprogressintegerid";
			public const string RollUpQueryInprogressMoneyId = "rollupqueryinprogressmoneyid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string StretchTargetDecimal = "stretchtargetdecimal";
			public const string StretchTargetInteger = "stretchtargetinteger";
			public const string StretchTargetMoney = "stretchtargetmoney";
			public const string StretchTargetMoney_Base = "stretchtargetmoney_base";
			public const string StretchTargetString = "stretchtargetstring";
			public const string TargetDecimal = "targetdecimal";
			public const string TargetInteger = "targetinteger";
			public const string TargetMoney = "targetmoney";
			public const string TargetMoney_Base = "targetmoney_base";
			public const string TargetString = "targetstring";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TreeId = "treeid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string business_unit_goal = "business_unit_goal";
			public const string Referencinggoal_parent_goal = "goal_parent_goal";
			public const string ReferencingGoal_RollupError_Goal = "Goal_RollupError_Goal";
			public const string goal_rollupquery_actualdecimal = "goal_rollupquery_actualdecimal";
			public const string goal_rollupquery_actualmoney = "goal_rollupquery_actualmoney";
			public const string goal_rollupquery_customdecimal = "goal_rollupquery_customdecimal";
			public const string goal_rollupquery_customint = "goal_rollupquery_customint";
			public const string goal_rollupquery_custommoney = "goal_rollupquery_custommoney";
			public const string goal_rollupquery_inprogressdecimal = "goal_rollupquery_inprogressdecimal";
			public const string goal_rollupquery_inprogressint = "goal_rollupquery_inprogressint";
			public const string goal_rollupquery_inprogressmoney = "goal_rollupquery_inprogressmoney";
			public const string goalrollupquery_actualint = "goalrollupquery_actualint";
			public const string lk_goal_createdby = "lk_goal_createdby";
			public const string lk_goal_createdonbehalfby = "lk_goal_createdonbehalfby";
			public const string lk_goal_modifiedby = "lk_goal_modifiedby";
			public const string lk_goal_modifiedonbehalfby = "lk_goal_modifiedonbehalfby";
			public const string metric_goal = "metric_goal";
			public const string team_goal = "team_goal";
			public const string team_goal_goalowner = "team_goal_goalowner";
			public const string TransactionCurrency_Goal = "TransactionCurrency_Goal";
			public const string user_goal = "user_goal";
			public const string user_goal_goalowner = "user_goal_goalowner";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Goal() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "goal";
		
		public const int EntityTypeCode = 9600;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Shows the actual value (Decimal type) achieved towards the target as of the last rolled-up date. This field appears when the metric type of the goal is Amount and the amount data type is Decimal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdecimal")]
		public System.Nullable<decimal> ActualDecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("actualdecimal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActualDecimal");
				this.SetAttributeValue("actualdecimal", value);
				this.OnPropertyChanged("ActualDecimal");
			}
		}
		
		/// <summary>
		/// Shows the actual value (integer) achieved towards the target as of the last rolled-up date. This field appears when the metric type of the goal is Amount or Count and the amount data type is Integer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualinteger")]
		public System.Nullable<int> ActualInteger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualinteger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActualInteger");
				this.SetAttributeValue("actualinteger", value);
				this.OnPropertyChanged("ActualInteger");
			}
		}
		
		/// <summary>
		/// Shows the actual value (Money type) achieved towards the target as of the last rolled-up date. This field appears when the metric type of the goal is Amount and the amount data type is Money.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualmoney")]
		public Microsoft.Xrm.Sdk.Money ActualMoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualmoney");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActualMoney");
				this.SetAttributeValue("actualmoney", value);
				this.OnPropertyChanged("ActualMoney");
			}
		}
		
		/// <summary>
		/// Shows the actual value (money type) in base currency to track goal results against the target.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualmoney_base")]
		public Microsoft.Xrm.Sdk.Money ActualMoney_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualmoney_base");
			}
		}
		
		/// <summary>
		/// Actual Value of the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstring")]
		public string ActualString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("actualstring");
			}
		}
		
		/// <summary>
		/// Data type of the amount.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("amountdatatype")]
		public Microsoft.Xrm.Sdk.OptionSetValue AmountDataType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("amountdatatype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AmountDataType");
				this.SetAttributeValue("amountdatatype", value);
				this.OnPropertyChanged("AmountDataType");
			}
		}
		
		/// <summary>
		/// Shows the expected amount for actual value (decimal type) against the target goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("computedtargetasoftodaydecimal")]
		public System.Nullable<decimal> ComputedTargetAsOfTodayDecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("computedtargetasoftodaydecimal");
			}
		}
		
		/// <summary>
		/// Shows the expected amount for actual value (integer type) against the target goal as of the current date.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("computedtargetasoftodayinteger")]
		public System.Nullable<int> ComputedTargetAsOfTodayInteger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("computedtargetasoftodayinteger");
			}
		}
		
		/// <summary>
		/// Shows the expected amount for actual value (money type) against the target goal as of the current date.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("computedtargetasoftodaymoney")]
		public Microsoft.Xrm.Sdk.Money ComputedTargetAsOfTodayMoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("computedtargetasoftodaymoney");
			}
		}
		
		/// <summary>
		/// Shows the expected amount in base currency for actual value (money type) against the target goal as of the current date.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("computedtargetasoftodaymoney_base")]
		public Microsoft.Xrm.Sdk.Money ComputedTargetAsOfTodayMoney_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("computedtargetasoftodaymoney_base");
			}
		}
		
		/// <summary>
		/// Shows the expected value for percentage achieved against the target goal as of the current date.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("computedtargetasoftodaypercentageachieved")]
		public System.Nullable<decimal> ComputedTargetAsOfTodayPercentageAchieved
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("computedtargetasoftodaypercentageachieved");
			}
		}
		
		/// <summary>
		/// Select whether only the goal owner's records, or all records, should be rolled up for goal results.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("consideronlygoalownersrecords")]
		public System.Nullable<bool> ConsiderOnlyGoalOwnersRecords
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("consideronlygoalownersrecords");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ConsiderOnlyGoalOwnersRecords");
				this.SetAttributeValue("consideronlygoalownersrecords", value);
				this.OnPropertyChanged("ConsiderOnlyGoalOwnersRecords");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Indicates a placeholder rollup field for a decimal value to track a third category of results other than actuals and in-progress results.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customrollupfielddecimal")]
		public System.Nullable<decimal> CustomRollupFieldDecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("customrollupfielddecimal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CustomRollupFieldDecimal");
				this.SetAttributeValue("customrollupfielddecimal", value);
				this.OnPropertyChanged("CustomRollupFieldDecimal");
			}
		}
		
		/// <summary>
		/// Indicates a placeholder rollup field for an integer value to track a third category of results other than actuals and in-progress results.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customrollupfieldinteger")]
		public System.Nullable<int> CustomRollupFieldInteger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("customrollupfieldinteger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CustomRollupFieldInteger");
				this.SetAttributeValue("customrollupfieldinteger", value);
				this.OnPropertyChanged("CustomRollupFieldInteger");
			}
		}
		
		/// <summary>
		/// Indicates a placeholder rollup field for a money value to track a third category of results other than actuals and in-progress results.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customrollupfieldmoney")]
		public Microsoft.Xrm.Sdk.Money CustomRollupFieldMoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("customrollupfieldmoney");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CustomRollupFieldMoney");
				this.SetAttributeValue("customrollupfieldmoney", value);
				this.OnPropertyChanged("CustomRollupFieldMoney");
			}
		}
		
		/// <summary>
		/// Indicates a placeholder rollup field for a money value in base currency to track a third category of results other than actuals and in-progress results.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customrollupfieldmoney_base")]
		public Microsoft.Xrm.Sdk.Money CustomRollupFieldMoney_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("customrollupfieldmoney_base");
			}
		}
		
		/// <summary>
		/// Placeholder rollup field for the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customrollupfieldstring")]
		public string CustomRollupFieldString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("customrollupfieldstring");
			}
		}
		
		/// <summary>
		/// Depth of the goal in the tree.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("depth")]
		public System.Nullable<int> Depth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("depth");
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityImage");
				this.SetAttributeValue("entityimage", value);
				this.OnPropertyChanged("EntityImage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Select the fiscal period for the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalperiod")]
		public Microsoft.Xrm.Sdk.OptionSetValue FiscalPeriod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("fiscalperiod");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalPeriod");
				this.SetAttributeValue("fiscalperiod", value);
				this.OnPropertyChanged("FiscalPeriod");
			}
		}
		
		/// <summary>
		/// Select the fiscal year for the goal that's being tracked.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyear")]
		public Microsoft.Xrm.Sdk.OptionSetValue FiscalYear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("fiscalyear");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalYear");
				this.SetAttributeValue("fiscalyear", value);
				this.OnPropertyChanged("FiscalYear");
			}
		}
		
		/// <summary>
		/// Enter the date when the goal ends.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalenddate")]
		public System.Nullable<System.DateTime> GoalEndDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("goalenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GoalEndDate");
				this.SetAttributeValue("goalenddate", value);
				this.OnPropertyChanged("GoalEndDate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalid")]
		public System.Nullable<System.Guid> GoalId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("goalid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GoalId");
				this.SetAttributeValue("goalid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("GoalId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.GoalId = value;
			}
		}
		
		/// <summary>
		/// Choose the user or team responsible for meeting the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalownerid")]
		public Microsoft.Xrm.Sdk.EntityReference GoalOwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("goalownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GoalOwnerId");
				this.SetAttributeValue("goalownerid", value);
				this.OnPropertyChanged("GoalOwnerId");
			}
		}
		
		/// <summary>
		/// Enter the date and time when the period for tracking the goal begins.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalstartdate")]
		public System.Nullable<System.DateTime> GoalStartDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("goalstartdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GoalStartDate");
				this.SetAttributeValue("goalstartdate", value);
				this.OnPropertyChanged("GoalStartDate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the goal that caused an error in the rollup of the goal hierarchy.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalwitherrorid")]
		public Microsoft.Xrm.Sdk.EntityReference GoalWithErrorId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("goalwitherrorid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GoalWithErrorId");
				this.SetAttributeValue("goalwitherrorid", value);
				this.OnPropertyChanged("GoalWithErrorId");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Shows the in-progress value (decimal) against the target. This value could contribute to a goal, but is not counted yet as actual.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inprogressdecimal")]
		public System.Nullable<decimal> InProgressDecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("inprogressdecimal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InProgressDecimal");
				this.SetAttributeValue("inprogressdecimal", value);
				this.OnPropertyChanged("InProgressDecimal");
			}
		}
		
		/// <summary>
		/// Shows the in-progress value (integer) against the target. This value could contribute to a goal, but is not counted yet as actual.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inprogressinteger")]
		public System.Nullable<int> InProgressInteger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("inprogressinteger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InProgressInteger");
				this.SetAttributeValue("inprogressinteger", value);
				this.OnPropertyChanged("InProgressInteger");
			}
		}
		
		/// <summary>
		/// Shows the in-progress value (money) against the target. This value could contribute to a goal, but is not counted yet as actual.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inprogressmoney")]
		public Microsoft.Xrm.Sdk.Money InProgressMoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("inprogressmoney");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InProgressMoney");
				this.SetAttributeValue("inprogressmoney", value);
				this.OnPropertyChanged("InProgressMoney");
			}
		}
		
		/// <summary>
		/// Shows the in-progress value (money) in base currency to track goal results against the target.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inprogressmoney_base")]
		public Microsoft.Xrm.Sdk.Money InProgressMoney_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("inprogressmoney_base");
			}
		}
		
		/// <summary>
		/// In-progress value of the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inprogressstring")]
		public string InProgressString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("inprogressstring");
			}
		}
		
		/// <summary>
		/// Indicates whether the metric type is Count or Amount.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isamount")]
		public System.Nullable<bool> IsAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAmount");
				this.SetAttributeValue("isamount", value);
				this.OnPropertyChanged("IsAmount");
			}
		}
		
		/// <summary>
		/// Select whether the goal period is a fiscal period or custom period.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfiscalperiodgoal")]
		public System.Nullable<bool> IsFiscalPeriodGoal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfiscalperiodgoal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsFiscalPeriodGoal");
				this.SetAttributeValue("isfiscalperiodgoal", value);
				this.OnPropertyChanged("IsFiscalPeriodGoal");
			}
		}
		
		/// <summary>
		/// Select whether the system rollup fields are updated. If set to Yes, the next system rollup will not update the values of the rollup fields with the system calculated values.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoverridden")]
		public System.Nullable<bool> IsOverridden
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoverridden");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsOverridden");
				this.SetAttributeValue("isoverridden", value);
				this.OnPropertyChanged("IsOverridden");
			}
		}
		
		/// <summary>
		/// Indicates whether the values of system rollup fields can be updated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoverride")]
		public System.Nullable<bool> IsOverride
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoverride");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsOverride");
				this.SetAttributeValue("isoverride", value);
				this.OnPropertyChanged("IsOverride");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the goal was last rolled up. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastrolledupdate")]
		public System.Nullable<System.DateTime> LastRolledupDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastrolledupdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastRolledupDate");
				this.SetAttributeValue("lastrolledupdate", value);
				this.OnPropertyChanged("LastRolledupDate");
			}
		}
		
		/// <summary>
		/// Choose the metric for the goal. This metric determines how the goal is tracked.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("metricid")]
		public Microsoft.Xrm.Sdk.EntityReference MetricId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("metricid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MetricId");
				this.SetAttributeValue("metricid", value);
				this.OnPropertyChanged("MetricId");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningBusinessUnit");
				this.SetAttributeValue("owningbusinessunit", value);
				this.OnPropertyChanged("OwningBusinessUnit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningTeam");
				this.SetAttributeValue("owningteam", value);
				this.OnPropertyChanged("OwningTeam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user who owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningUser");
				this.SetAttributeValue("owninguser", value);
				this.OnPropertyChanged("OwningUser");
			}
		}
		
		/// <summary>
		/// Choose a parent goal if the current goal is a child goal. This sets up a parent-child relationship for reporting and analytics.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentgoalid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentGoalId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentgoalid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ParentGoalId");
				this.SetAttributeValue("parentgoalid", value);
				this.OnPropertyChanged("ParentGoalId");
			}
		}
		
		/// <summary>
		/// Shows the percentage achieved against the target goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("percentage")]
		public System.Nullable<decimal> Percentage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("percentage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Percentage");
				this.SetAttributeValue("percentage", value);
				this.OnPropertyChanged("Percentage");
			}
		}
		
		/// <summary>
		/// Error code associated with rollup.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rolluperrorcode")]
		public System.Nullable<int> RollupErrorCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("rolluperrorcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollupErrorCode");
				this.SetAttributeValue("rolluperrorcode", value);
				this.OnPropertyChanged("RollupErrorCode");
			}
		}
		
		/// <summary>
		/// Select whether the data should be rolled up only from the child goals.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rolluponlyfromchildgoals")]
		public System.Nullable<bool> RollupOnlyFromChildGoals
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("rolluponlyfromchildgoals");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollupOnlyFromChildGoals");
				this.SetAttributeValue("rolluponlyfromchildgoals", value);
				this.OnPropertyChanged("RollupOnlyFromChildGoals");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate the actual data for the goal (decimal).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryactualdecimalid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryActualDecimalId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupqueryactualdecimalid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryActualDecimalId");
				this.SetAttributeValue("rollupqueryactualdecimalid", value);
				this.OnPropertyChanged("RollUpQueryActualDecimalId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate the actual data for the goal (integer).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryactualintegerid")]
		public Microsoft.Xrm.Sdk.EntityReference RollupQueryActualIntegerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupqueryactualintegerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollupQueryActualIntegerId");
				this.SetAttributeValue("rollupqueryactualintegerid", value);
				this.OnPropertyChanged("RollupQueryActualIntegerId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate the actual data for the goal (money).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryactualmoneyid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryActualMoneyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupqueryactualmoneyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryActualMoneyId");
				this.SetAttributeValue("rollupqueryactualmoneyid", value);
				this.OnPropertyChanged("RollUpQueryActualMoneyId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate data for the custom rollup field (decimal).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupquerycustomdecimalid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryCustomDecimalId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupquerycustomdecimalid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryCustomDecimalId");
				this.SetAttributeValue("rollupquerycustomdecimalid", value);
				this.OnPropertyChanged("RollUpQueryCustomDecimalId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate data for the custom rollup field (integer).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupquerycustomintegerid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryCustomIntegerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupquerycustomintegerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryCustomIntegerId");
				this.SetAttributeValue("rollupquerycustomintegerid", value);
				this.OnPropertyChanged("RollUpQueryCustomIntegerId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate data for the custom rollup field (money).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupquerycustommoneyid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryCustomMoneyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupquerycustommoneyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryCustomMoneyId");
				this.SetAttributeValue("rollupquerycustommoneyid", value);
				this.OnPropertyChanged("RollUpQueryCustomMoneyId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate data for the in-progress rollup field (decimal).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryinprogressdecimalid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryInprogressDecimalId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupqueryinprogressdecimalid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryInprogressDecimalId");
				this.SetAttributeValue("rollupqueryinprogressdecimalid", value);
				this.OnPropertyChanged("RollUpQueryInprogressDecimalId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate data for the in-progress rollup field (integer).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryinprogressintegerid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryInprogressIntegerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupqueryinprogressintegerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryInprogressIntegerId");
				this.SetAttributeValue("rollupqueryinprogressintegerid", value);
				this.OnPropertyChanged("RollUpQueryInprogressIntegerId");
			}
		}
		
		/// <summary>
		/// Choose the query that will be used to calculate data for the in-progress rollup field (money).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryinprogressmoneyid")]
		public Microsoft.Xrm.Sdk.EntityReference RollUpQueryInprogressMoneyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rollupqueryinprogressmoneyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RollUpQueryInprogressMoneyId");
				this.SetAttributeValue("rollupqueryinprogressmoneyid", value);
				this.OnPropertyChanged("RollUpQueryInprogressMoneyId");
			}
		}
		
		/// <summary>
		/// Shows whether the goal is open, completed, or canceled. Completed and canceled goals are read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Entities.GoalState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Entities.GoalState)(System.Enum.ToObject(typeof(Entities.GoalState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the goal's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Select a stretch target (decimal) of the goal to define a higher or difficult level of goal than the usual ones.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stretchtargetdecimal")]
		public System.Nullable<decimal> StretchTargetDecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("stretchtargetdecimal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StretchTargetDecimal");
				this.SetAttributeValue("stretchtargetdecimal", value);
				this.OnPropertyChanged("StretchTargetDecimal");
			}
		}
		
		/// <summary>
		/// Select the stretch target (integer) of the goal to define a higher or difficult level of goal than the usual ones.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stretchtargetinteger")]
		public System.Nullable<int> StretchTargetInteger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("stretchtargetinteger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StretchTargetInteger");
				this.SetAttributeValue("stretchtargetinteger", value);
				this.OnPropertyChanged("StretchTargetInteger");
			}
		}
		
		/// <summary>
		/// Select stretch target (money) of the goal to define a higher or difficult level of goal than the usual ones.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stretchtargetmoney")]
		public Microsoft.Xrm.Sdk.Money StretchTargetMoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("stretchtargetmoney");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StretchTargetMoney");
				this.SetAttributeValue("stretchtargetmoney", value);
				this.OnPropertyChanged("StretchTargetMoney");
			}
		}
		
		/// <summary>
		/// Shows the stretch target (money) in base currency to indicate a higher or difficult level of goal than the usual ones.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stretchtargetmoney_base")]
		public Microsoft.Xrm.Sdk.Money StretchTargetMoney_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("stretchtargetmoney_base");
			}
		}
		
		/// <summary>
		/// Stretch target value for all data types.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stretchtargetstring")]
		public string StretchTargetString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("stretchtargetstring");
			}
		}
		
		/// <summary>
		/// Select a goal target of the decimal type to use for tracking data that include partial numbers, such as pounds sold of a product sold by weight.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetdecimal")]
		public System.Nullable<decimal> TargetDecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("targetdecimal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TargetDecimal");
				this.SetAttributeValue("targetdecimal", value);
				this.OnPropertyChanged("TargetDecimal");
			}
		}
		
		/// <summary>
		/// Select a goal target of the integer type to use for tracking anything countable in whole numbers, such as units sold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetinteger")]
		public System.Nullable<int> TargetInteger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("targetinteger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TargetInteger");
				this.SetAttributeValue("targetinteger", value);
				this.OnPropertyChanged("TargetInteger");
			}
		}
		
		/// <summary>
		/// Select a goal target (money) to track a monetary amount such as revenue from a product.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetmoney")]
		public Microsoft.Xrm.Sdk.Money TargetMoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("targetmoney");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TargetMoney");
				this.SetAttributeValue("targetmoney", value);
				this.OnPropertyChanged("TargetMoney");
			}
		}
		
		/// <summary>
		/// Shows the goal target of the money type in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetmoney_base")]
		public Microsoft.Xrm.Sdk.Money TargetMoney_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("targetmoney_base");
			}
		}
		
		/// <summary>
		/// Target value of the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetstring")]
		public string TargetString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("targetstring");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Type a title or name that describes the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Title");
				this.SetAttributeValue("title", value);
				this.OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the goal tree.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("treeid")]
		public System.Nullable<System.Guid> TreeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("treeid");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the goal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N Goal_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Goal_Annotation")]
		public System.Collections.Generic.IEnumerable<Entities.Annotation> Goal_Annotation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Annotation>("Goal_Annotation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Goal_Annotation");
				this.SetRelatedEntities<Entities.Annotation>("Goal_Annotation", null, value);
				this.OnPropertyChanged("Goal_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N Goal_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Goal_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Entities.AsyncOperation> Goal_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.AsyncOperation>("Goal_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Goal_AsyncOperations");
				this.SetRelatedEntities<Entities.AsyncOperation>("Goal_AsyncOperations", null, value);
				this.OnPropertyChanged("Goal_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N goal_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_connections1")]
		public System.Collections.Generic.IEnumerable<Entities.Connection> goal_connections1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Connection>("goal_connections1", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_connections1");
				this.SetRelatedEntities<Entities.Connection>("goal_connections1", null, value);
				this.OnPropertyChanged("goal_connections1");
			}
		}
		
		/// <summary>
		/// 1:N goal_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_connections2")]
		public System.Collections.Generic.IEnumerable<Entities.Connection> goal_connections2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Connection>("goal_connections2", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_connections2");
				this.SetRelatedEntities<Entities.Connection>("goal_connections2", null, value);
				this.OnPropertyChanged("goal_connections2");
			}
		}
		
		/// <summary>
		/// 1:N Goal_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Goal_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> Goal_DuplicateBaseRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DuplicateRecord>("Goal_DuplicateBaseRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Goal_DuplicateBaseRecord");
				this.SetRelatedEntities<Entities.DuplicateRecord>("Goal_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("Goal_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N Goal_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Goal_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> Goal_DuplicateMatchingRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.DuplicateRecord>("Goal_DuplicateMatchingRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Goal_DuplicateMatchingRecord");
				this.SetRelatedEntities<Entities.DuplicateRecord>("Goal_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("Goal_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N goal_parent_goal
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_parent_goal", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Entities.Goal> Referencedgoal_parent_goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Goal>("goal_parent_goal", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencedgoal_parent_goal");
				this.SetRelatedEntities<Entities.Goal>("goal_parent_goal", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedgoal_parent_goal");
			}
		}
		
		/// <summary>
		/// 1:N goal_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Entities.PrincipalObjectAttributeAccess> goal_principalobjectattributeaccess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.PrincipalObjectAttributeAccess>("goal_principalobjectattributeaccess", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_principalobjectattributeaccess");
				this.SetRelatedEntities<Entities.PrincipalObjectAttributeAccess>("goal_principalobjectattributeaccess", null, value);
				this.OnPropertyChanged("goal_principalobjectattributeaccess");
			}
		}
		
		/// <summary>
		/// 1:N Goal_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Goal_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Entities.ProcessSession> Goal_ProcessSessions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ProcessSession>("Goal_ProcessSessions", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Goal_ProcessSessions");
				this.SetRelatedEntities<Entities.ProcessSession>("Goal_ProcessSessions", null, value);
				this.OnPropertyChanged("Goal_ProcessSessions");
			}
		}
		
		/// <summary>
		/// 1:N Goal_RollupError_Goal
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Goal_RollupError_Goal", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Entities.Goal> ReferencedGoal_RollupError_Goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Goal>("Goal_RollupError_Goal", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReferencedGoal_RollupError_Goal");
				this.SetRelatedEntities<Entities.Goal>("Goal_RollupError_Goal", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("ReferencedGoal_RollupError_Goal");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_goal
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_goal")]
		public System.Collections.Generic.IEnumerable<Entities.UserEntityInstanceData> userentityinstancedata_goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.UserEntityInstanceData>("userentityinstancedata_goal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("userentityinstancedata_goal");
				this.SetRelatedEntities<Entities.UserEntityInstanceData>("userentityinstancedata_goal", null, value);
				this.OnPropertyChanged("userentityinstancedata_goal");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_goal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_goal")]
		public Entities.BusinessUnit business_unit_goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.BusinessUnit>("business_unit_goal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("business_unit_goal");
				this.SetRelatedEntity<Entities.BusinessUnit>("business_unit_goal", null, value);
				this.OnPropertyChanged("business_unit_goal");
			}
		}
		
		/// <summary>
		/// N:1 goal_parent_goal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentgoalid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_parent_goal", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Entities.Goal Referencinggoal_parent_goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Goal>("goal_parent_goal", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencinggoal_parent_goal");
				this.SetRelatedEntity<Entities.Goal>("goal_parent_goal", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("Referencinggoal_parent_goal");
			}
		}
		
		/// <summary>
		/// N:1 Goal_RollupError_Goal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalwitherrorid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Goal_RollupError_Goal", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Entities.Goal ReferencingGoal_RollupError_Goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Goal>("Goal_RollupError_Goal", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReferencingGoal_RollupError_Goal");
				this.SetRelatedEntity<Entities.Goal>("Goal_RollupError_Goal", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("ReferencingGoal_RollupError_Goal");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_actualdecimal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryactualdecimalid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_actualdecimal")]
		public Entities.GoalRollupQuery goal_rollupquery_actualdecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_actualdecimal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_actualdecimal");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_actualdecimal", null, value);
				this.OnPropertyChanged("goal_rollupquery_actualdecimal");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_actualmoney
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryactualmoneyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_actualmoney")]
		public Entities.GoalRollupQuery goal_rollupquery_actualmoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_actualmoney", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_actualmoney");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_actualmoney", null, value);
				this.OnPropertyChanged("goal_rollupquery_actualmoney");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_customdecimal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupquerycustomdecimalid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_customdecimal")]
		public Entities.GoalRollupQuery goal_rollupquery_customdecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_customdecimal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_customdecimal");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_customdecimal", null, value);
				this.OnPropertyChanged("goal_rollupquery_customdecimal");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_customint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupquerycustomintegerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_customint")]
		public Entities.GoalRollupQuery goal_rollupquery_customint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_customint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_customint");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_customint", null, value);
				this.OnPropertyChanged("goal_rollupquery_customint");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_custommoney
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupquerycustommoneyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_custommoney")]
		public Entities.GoalRollupQuery goal_rollupquery_custommoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_custommoney", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_custommoney");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_custommoney", null, value);
				this.OnPropertyChanged("goal_rollupquery_custommoney");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_inprogressdecimal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryinprogressdecimalid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_inprogressdecimal")]
		public Entities.GoalRollupQuery goal_rollupquery_inprogressdecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_inprogressdecimal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_inprogressdecimal");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_inprogressdecimal", null, value);
				this.OnPropertyChanged("goal_rollupquery_inprogressdecimal");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_inprogressint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryinprogressintegerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_inprogressint")]
		public Entities.GoalRollupQuery goal_rollupquery_inprogressint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_inprogressint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_inprogressint");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_inprogressint", null, value);
				this.OnPropertyChanged("goal_rollupquery_inprogressint");
			}
		}
		
		/// <summary>
		/// N:1 goal_rollupquery_inprogressmoney
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryinprogressmoneyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goal_rollupquery_inprogressmoney")]
		public Entities.GoalRollupQuery goal_rollupquery_inprogressmoney
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_inprogressmoney", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goal_rollupquery_inprogressmoney");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goal_rollupquery_inprogressmoney", null, value);
				this.OnPropertyChanged("goal_rollupquery_inprogressmoney");
			}
		}
		
		/// <summary>
		/// N:1 goalrollupquery_actualint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupqueryactualintegerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("goalrollupquery_actualint")]
		public Entities.GoalRollupQuery goalrollupquery_actualint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.GoalRollupQuery>("goalrollupquery_actualint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("goalrollupquery_actualint");
				this.SetRelatedEntity<Entities.GoalRollupQuery>("goalrollupquery_actualint", null, value);
				this.OnPropertyChanged("goalrollupquery_actualint");
			}
		}
		
		/// <summary>
		/// N:1 lk_goal_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_goal_createdby")]
		public Entities.SystemUser lk_goal_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_goal_createdby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_goal_createdby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_goal_createdby", null, value);
				this.OnPropertyChanged("lk_goal_createdby");
			}
		}
		
		/// <summary>
		/// N:1 lk_goal_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_goal_createdonbehalfby")]
		public Entities.SystemUser lk_goal_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_goal_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_goal_createdonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_goal_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_goal_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_goal_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_goal_modifiedby")]
		public Entities.SystemUser lk_goal_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_goal_modifiedby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_goal_modifiedby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_goal_modifiedby", null, value);
				this.OnPropertyChanged("lk_goal_modifiedby");
			}
		}
		
		/// <summary>
		/// N:1 lk_goal_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_goal_modifiedonbehalfby")]
		public Entities.SystemUser lk_goal_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_goal_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_goal_modifiedonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_goal_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_goal_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 metric_goal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("metricid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("metric_goal")]
		public Entities.Metric metric_goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Metric>("metric_goal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("metric_goal");
				this.SetRelatedEntity<Entities.Metric>("metric_goal", null, value);
				this.OnPropertyChanged("metric_goal");
			}
		}
		
		/// <summary>
		/// N:1 team_goal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_goal")]
		public Entities.Team team_goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Team>("team_goal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("team_goal");
				this.SetRelatedEntity<Entities.Team>("team_goal", null, value);
				this.OnPropertyChanged("team_goal");
			}
		}
		
		/// <summary>
		/// N:1 team_goal_goalowner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalownerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_goal_goalowner")]
		public Entities.Team team_goal_goalowner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Team>("team_goal_goalowner", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("team_goal_goalowner");
				this.SetRelatedEntity<Entities.Team>("team_goal_goalowner", null, value);
				this.OnPropertyChanged("team_goal_goalowner");
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Goal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Goal")]
		public Entities.TransactionCurrency TransactionCurrency_Goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.TransactionCurrency>("TransactionCurrency_Goal", null);
			}
		}
		
		/// <summary>
		/// N:1 user_goal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_goal")]
		public Entities.SystemUser user_goal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("user_goal", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("user_goal");
				this.SetRelatedEntity<Entities.SystemUser>("user_goal", null, value);
				this.OnPropertyChanged("user_goal");
			}
		}
		
		/// <summary>
		/// N:1 user_goal_goalowner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalownerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_goal_goalowner")]
		public Entities.SystemUser user_goal_goalowner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("user_goal_goalowner", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("user_goal_goalowner");
				this.SetRelatedEntity<Entities.SystemUser>("user_goal_goalowner", null, value);
				this.OnPropertyChanged("user_goal_goalowner");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Goal(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["goalid"] = base.Id;
                        break;
                    case "goalid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("amountdatatype")]
		public virtual Metric_GoalType? AmountDataTypeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Metric_GoalType?)(EntityOptionSetEnum.GetEnum(this, "amountdatatype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				AmountDataType = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalperiod")]
		public virtual Goal_FiscalPeriod? FiscalPeriodEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Goal_FiscalPeriod?)(EntityOptionSetEnum.GetEnum(this, "fiscalperiod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				FiscalPeriod = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyear")]
		public virtual Goal_FiscalYear? FiscalYearEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Goal_FiscalYear?)(EntityOptionSetEnum.GetEnum(this, "fiscalyear")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				FiscalYear = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Goal_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Goal_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}