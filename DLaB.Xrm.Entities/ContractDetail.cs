//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.Xrm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public enum ContractDetailState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Existing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Renewed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expired = 3,
	}
	
	/// <summary>
	/// Line item in a contract that specifies the type of service a customer is entitled to.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contractdetail")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public partial class ContractDetail : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string AccountId = "accountid";
			public const string ActiveOn = "activeon";
			public const string AllotmentsOverage = "allotmentsoverage";
			public const string AllotmentsRemaining = "allotmentsremaining";
			public const string AllotmentsUsed = "allotmentsused";
			public const string ContactId = "contactid";
			public const string ContractDetailId = "contractdetailid";
			public const string Id = "contractdetailid";
			public const string ContractId = "contractid";
			public const string ContractStateCode = "contractstatecode";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CustomerId = "customerid";
			public const string Discount = "discount";
			public const string Discount_Base = "discount_base";
			public const string DiscountPercentage = "discountpercentage";
			public const string EffectivityCalendar = "effectivitycalendar";
			public const string ExchangeRate = "exchangerate";
			public const string ExpiresOn = "expireson";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InitialQuantity = "initialquantity";
			public const string LineItemOrder = "lineitemorder";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Net = "net";
			public const string Net_Base = "net_base";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string Price = "price";
			public const string Price_Base = "price_base";
			public const string ProductId = "productid";
			public const string ProductSerialNumber = "productserialnumber";
			public const string Rate = "rate";
			public const string Rate_Base = "rate_base";
			public const string ServiceAddress = "serviceaddress";
			public const string ServiceContractUnitsCode = "servicecontractunitscode";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TotalAllotments = "totalallotments";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string UoMId = "uomid";
			public const string UoMScheduleId = "uomscheduleid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string contract_detail_unit_of_measure_schedule = "contract_detail_unit_of_measure_schedule";
			public const string contract_line_items = "contract_line_items";
			public const string contractlineitem_customer_accounts = "contractlineitem_customer_accounts";
			public const string contractlineitem_customer_contacts = "contractlineitem_customer_contacts";
			public const string customer_address_contract_line_items = "customer_address_contract_line_items";
			public const string lk_contractdetail_createdonbehalfby = "lk_contractdetail_createdonbehalfby";
			public const string lk_contractdetail_modifiedonbehalfby = "lk_contractdetail_modifiedonbehalfby";
			public const string lk_contractdetailbase_createdby = "lk_contractdetailbase_createdby";
			public const string lk_contractdetailbase_modifiedby = "lk_contractdetailbase_modifiedby";
			public const string product_contract_line_items = "product_contract_line_items";
			public const string transactioncurrency_contractdetail = "transactioncurrency_contractdetail";
			public const string unit_of_measurement_contract_line_items = "unit_of_measurement_contract_line_items";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ContractDetail() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "contractdetail";
		
		public const int EntityTypeCode = 1011;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the account with which the contract is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		/// <summary>
		/// Enter the date when the contract line becomes active.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activeon")]
		public System.Nullable<System.DateTime> ActiveOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("activeon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActiveOn");
				this.SetAttributeValue("activeon", value);
				this.OnPropertyChanged("ActiveOn");
			}
		}
		
		/// <summary>
		/// Shows the number of minutes over the Total Allotments field that have been spent on resolved cases related to the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allotmentsoverage")]
		public System.Nullable<int> AllotmentsOverage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("allotmentsoverage");
			}
		}
		
		/// <summary>
		/// Shows the number of cases or minutes remaining, based on the resolved cases logged to the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allotmentsremaining")]
		public System.Nullable<int> AllotmentsRemaining
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("allotmentsremaining");
			}
		}
		
		/// <summary>
		/// Shows the number of cases or minutes used in the resolved cases on the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allotmentsused")]
		public System.Nullable<int> AllotmentsUsed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("allotmentsused");
			}
		}
		
		/// <summary>
		/// Unique identifier for the contact associated with the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractdetailid")]
		public System.Nullable<System.Guid> ContractDetailId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("contractdetailid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContractDetailId");
				this.SetAttributeValue("contractdetailid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ContractDetailId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractdetailid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ContractDetailId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the contract associated with the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
		public Microsoft.Xrm.Sdk.EntityReference ContractId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contractid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContractId");
				this.SetAttributeValue("contractid", value);
				this.OnPropertyChanged("ContractId");
			}
		}
		
		/// <summary>
		/// Status of the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractstatecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ContractStateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("contractstatecode");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Select the customer account or contact to provide a quick link to additional customer details, such as address, phone number, activities, and orders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CustomerId");
				this.SetAttributeValue("customerid", value);
				this.OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// Type the discount amount for the contract line to deduct any negotiated or other savings from the net amount due.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discount")]
		public Microsoft.Xrm.Sdk.Money Discount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("discount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Discount");
				this.SetAttributeValue("discount", value);
				this.OnPropertyChanged("Discount");
			}
		}
		
		/// <summary>
		/// Shows the Discount field converted to the system's default base currency. The calculation uses the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discount_base")]
		public Microsoft.Xrm.Sdk.Money Discount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("discount_base");
			}
		}
		
		/// <summary>
		/// Type the discount rate that should be applied to the Total Price, for use in calculating the net amount due for the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountpercentage")]
		public System.Nullable<decimal> DiscountPercentage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("discountpercentage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DiscountPercentage");
				this.SetAttributeValue("discountpercentage", value);
				this.OnPropertyChanged("DiscountPercentage");
			}
		}
		
		/// <summary>
		/// Days of the week and times for which the contract line item is effective.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectivitycalendar")]
		public string EffectivityCalendar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("effectivitycalendar");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EffectivityCalendar");
				this.SetAttributeValue("effectivitycalendar", value);
				this.OnPropertyChanged("EffectivityCalendar");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Enter the date when the contract line expires. The date is automatically filled with the contract date, but you can change it if required.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expireson")]
		public System.Nullable<System.DateTime> ExpiresOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("expireson");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExpiresOn");
				this.SetAttributeValue("expireson", value);
				this.OnPropertyChanged("ExpiresOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Type the number of units of the specified product or service that are eligible for support on the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialquantity")]
		public System.Nullable<int> InitialQuantity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("initialquantity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InitialQuantity");
				this.SetAttributeValue("initialquantity", value);
				this.OnPropertyChanged("InitialQuantity");
			}
		}
		
		/// <summary>
		/// Type the line item number for the contract line to easily identify the contract line and make sure it's listed in the correct order in the parent contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lineitemorder")]
		public System.Nullable<int> LineItemOrder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("lineitemorder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LineItemOrder");
				this.SetAttributeValue("lineitemorder", value);
				this.OnPropertyChanged("LineItemOrder");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows the total charge to the customer for the contract line, calculated as the Total Price minus any discounts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("net")]
		public Microsoft.Xrm.Sdk.Money Net
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("net");
			}
		}
		
		/// <summary>
		/// Shows the Net field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("net_base")]
		public Microsoft.Xrm.Sdk.Money Net_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("net_base");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the contract detail.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public System.Nullable<System.Guid> OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningBusinessUnit");
				this.SetAttributeValue("owningbusinessunit", value);
				this.OnPropertyChanged("OwningBusinessUnit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public System.Nullable<System.Guid> OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("owninguser");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningUser");
				this.SetAttributeValue("owninguser", value);
				this.OnPropertyChanged("OwningUser");
			}
		}
		
		/// <summary>
		/// Type the total service charge for the contract line before any discounts are credited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("price")]
		public Microsoft.Xrm.Sdk.Money Price
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("price");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Price");
				this.SetAttributeValue("price", value);
				this.OnPropertyChanged("Price");
			}
		}
		
		/// <summary>
		/// Shows the Total Price field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("price_base")]
		public Microsoft.Xrm.Sdk.Money Price_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("price_base");
			}
		}
		
		/// <summary>
		/// Choose the product that is eligible for services on the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productid")]
		public Microsoft.Xrm.Sdk.EntityReference ProductId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("productid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductId");
				this.SetAttributeValue("productid", value);
				this.OnPropertyChanged("ProductId");
			}
		}
		
		/// <summary>
		/// Type the serial number for the product that is eligible for services on the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productserialnumber")]
		public string ProductSerialNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("productserialnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductSerialNumber");
				this.SetAttributeValue("productserialnumber", value);
				this.OnPropertyChanged("ProductSerialNumber");
			}
		}
		
		/// <summary>
		/// Shows the cost per case or minute, calculated by dividing the Total Price value by the total number of cases or minutes allocated to the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rate")]
		public Microsoft.Xrm.Sdk.Money Rate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("rate");
			}
		}
		
		/// <summary>
		/// Shows the Rate field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rate_base")]
		public Microsoft.Xrm.Sdk.Money Rate_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("rate_base");
			}
		}
		
		/// <summary>
		/// Choose the address for the customer account or contact where the services are provided.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceaddress")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceAddress");
				this.SetAttributeValue("serviceaddress", value);
				this.OnPropertyChanged("ServiceAddress");
			}
		}
		
		/// <summary>
		/// Select the unit type allotted in the contract line, such as cases or minutes, to determine the level of support.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicecontractunitscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ServiceContractUnitsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("servicecontractunitscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceContractUnitsCode");
				this.SetAttributeValue("servicecontractunitscode", value);
				this.OnPropertyChanged("ServiceContractUnitsCode");
			}
		}
		
		/// <summary>
		/// Shows whether the contract line is existing, renewed, canceled, or expired. You can't edit a contract line after it is saved, regardless of the status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Entities.ContractDetailState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Entities.ContractDetailState)(System.Enum.ToObject(typeof(Entities.ContractDetailState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the contract line's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Type a title or name that describes the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Title");
				this.SetAttributeValue("title", value);
				this.OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// Type the total number of minutes or cases allowed for the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalallotments")]
		public System.Nullable<int> TotalAllotments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("totalallotments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TotalAllotments");
				this.SetAttributeValue("totalallotments", value);
				this.OnPropertyChanged("TotalAllotments");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// Choose the unit of measurement for the base unit quantity for this purchase, such as each or dozen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uomid")]
		public Microsoft.Xrm.Sdk.EntityReference UoMId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("uomid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UoMId");
				this.SetAttributeValue("uomid", value);
				this.OnPropertyChanged("UoMId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the unit group associated with the contract line.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uomscheduleid")]
		public Microsoft.Xrm.Sdk.EntityReference UoMScheduleId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("uomscheduleid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UoMScheduleId");
				this.SetAttributeValue("uomscheduleid", value);
				this.OnPropertyChanged("UoMScheduleId");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the contract template.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N contract_detail_cases
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_detail_cases")]
		public System.Collections.Generic.IEnumerable<Entities.Incident> contract_detail_cases
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Incident>("contract_detail_cases", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("contract_detail_cases");
				this.SetRelatedEntities<Entities.Incident>("contract_detail_cases", null, value);
				this.OnPropertyChanged("contract_detail_cases");
			}
		}
		
		/// <summary>
		/// 1:N ContractDetail_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ContractDetail_Annotation")]
		public System.Collections.Generic.IEnumerable<Entities.Annotation> ContractDetail_Annotation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.Annotation>("ContractDetail_Annotation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContractDetail_Annotation");
				this.SetRelatedEntities<Entities.Annotation>("ContractDetail_Annotation", null, value);
				this.OnPropertyChanged("ContractDetail_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N ContractDetail_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ContractDetail_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Entities.AsyncOperation> ContractDetail_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.AsyncOperation>("ContractDetail_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContractDetail_AsyncOperations");
				this.SetRelatedEntities<Entities.AsyncOperation>("ContractDetail_AsyncOperations", null, value);
				this.OnPropertyChanged("ContractDetail_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N ContractDetail_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ContractDetail_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Entities.BulkDeleteFailure> ContractDetail_BulkDeleteFailures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.BulkDeleteFailure>("ContractDetail_BulkDeleteFailures", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContractDetail_BulkDeleteFailures");
				this.SetRelatedEntities<Entities.BulkDeleteFailure>("ContractDetail_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("ContractDetail_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N contractdetail_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contractdetail_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Entities.PrincipalObjectAttributeAccess> contractdetail_principalobjectattributeaccess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.PrincipalObjectAttributeAccess>("contractdetail_principalobjectattributeaccess", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("contractdetail_principalobjectattributeaccess");
				this.SetRelatedEntities<Entities.PrincipalObjectAttributeAccess>("contractdetail_principalobjectattributeaccess", null, value);
				this.OnPropertyChanged("contractdetail_principalobjectattributeaccess");
			}
		}
		
		/// <summary>
		/// 1:N ContractDetail_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ContractDetail_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Entities.ProcessSession> ContractDetail_ProcessSessions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.ProcessSession>("ContractDetail_ProcessSessions", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContractDetail_ProcessSessions");
				this.SetRelatedEntities<Entities.ProcessSession>("ContractDetail_ProcessSessions", null, value);
				this.OnPropertyChanged("ContractDetail_ProcessSessions");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_contractdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_contractdetail")]
		public System.Collections.Generic.IEnumerable<Entities.UserEntityInstanceData> userentityinstancedata_contractdetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.UserEntityInstanceData>("userentityinstancedata_contractdetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("userentityinstancedata_contractdetail");
				this.SetRelatedEntities<Entities.UserEntityInstanceData>("userentityinstancedata_contractdetail", null, value);
				this.OnPropertyChanged("userentityinstancedata_contractdetail");
			}
		}
		
		/// <summary>
		/// N:1 contract_detail_unit_of_measure_schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uomscheduleid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_detail_unit_of_measure_schedule")]
		public Entities.UoMSchedule contract_detail_unit_of_measure_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.UoMSchedule>("contract_detail_unit_of_measure_schedule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("contract_detail_unit_of_measure_schedule");
				this.SetRelatedEntity<Entities.UoMSchedule>("contract_detail_unit_of_measure_schedule", null, value);
				this.OnPropertyChanged("contract_detail_unit_of_measure_schedule");
			}
		}
		
		/// <summary>
		/// N:1 contract_line_items
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_line_items")]
		public Entities.Contract contract_line_items
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Contract>("contract_line_items", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("contract_line_items");
				this.SetRelatedEntity<Entities.Contract>("contract_line_items", null, value);
				this.OnPropertyChanged("contract_line_items");
			}
		}
		
		/// <summary>
		/// N:1 contractlineitem_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contractlineitem_customer_accounts")]
		public Entities.Account contractlineitem_customer_accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Account>("contractlineitem_customer_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("contractlineitem_customer_accounts");
				this.SetRelatedEntity<Entities.Account>("contractlineitem_customer_accounts", null, value);
				this.OnPropertyChanged("contractlineitem_customer_accounts");
			}
		}
		
		/// <summary>
		/// N:1 contractlineitem_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contractlineitem_customer_contacts")]
		public Entities.Contact contractlineitem_customer_contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Contact>("contractlineitem_customer_contacts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("contractlineitem_customer_contacts");
				this.SetRelatedEntity<Entities.Contact>("contractlineitem_customer_contacts", null, value);
				this.OnPropertyChanged("contractlineitem_customer_contacts");
			}
		}
		
		/// <summary>
		/// N:1 customer_address_contract_line_items
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceaddress")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("customer_address_contract_line_items")]
		public Entities.CustomerAddress customer_address_contract_line_items
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.CustomerAddress>("customer_address_contract_line_items", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("customer_address_contract_line_items");
				this.SetRelatedEntity<Entities.CustomerAddress>("customer_address_contract_line_items", null, value);
				this.OnPropertyChanged("customer_address_contract_line_items");
			}
		}
		
		/// <summary>
		/// N:1 lk_contractdetail_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractdetail_createdonbehalfby")]
		public Entities.SystemUser lk_contractdetail_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_contractdetail_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_contractdetail_createdonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_contractdetail_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_contractdetail_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_contractdetail_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractdetail_modifiedonbehalfby")]
		public Entities.SystemUser lk_contractdetail_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_contractdetail_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_contractdetail_modifiedonbehalfby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_contractdetail_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_contractdetail_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_contractdetailbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractdetailbase_createdby")]
		public Entities.SystemUser lk_contractdetailbase_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_contractdetailbase_createdby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_contractdetailbase_createdby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_contractdetailbase_createdby", null, value);
				this.OnPropertyChanged("lk_contractdetailbase_createdby");
			}
		}
		
		/// <summary>
		/// N:1 lk_contractdetailbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractdetailbase_modifiedby")]
		public Entities.SystemUser lk_contractdetailbase_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.SystemUser>("lk_contractdetailbase_modifiedby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_contractdetailbase_modifiedby");
				this.SetRelatedEntity<Entities.SystemUser>("lk_contractdetailbase_modifiedby", null, value);
				this.OnPropertyChanged("lk_contractdetailbase_modifiedby");
			}
		}
		
		/// <summary>
		/// N:1 product_contract_line_items
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("product_contract_line_items")]
		public Entities.Product product_contract_line_items
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Product>("product_contract_line_items", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("product_contract_line_items");
				this.SetRelatedEntity<Entities.Product>("product_contract_line_items", null, value);
				this.OnPropertyChanged("product_contract_line_items");
			}
		}
		
		/// <summary>
		/// N:1 transactioncurrency_contractdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contractdetail")]
		public Entities.TransactionCurrency transactioncurrency_contractdetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.TransactionCurrency>("transactioncurrency_contractdetail", null);
			}
		}
		
		/// <summary>
		/// N:1 unit_of_measurement_contract_line_items
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uomid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("unit_of_measurement_contract_line_items")]
		public Entities.UoM unit_of_measurement_contract_line_items
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.UoM>("unit_of_measurement_contract_line_items", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("unit_of_measurement_contract_line_items");
				this.SetRelatedEntity<Entities.UoM>("unit_of_measurement_contract_line_items", null, value);
				this.OnPropertyChanged("unit_of_measurement_contract_line_items");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ContractDetail(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["contractdetailid"] = base.Id;
                        break;
                    case "contractdetailid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractstatecode")]
		public virtual ContractDetail_ContractStateCode? ContractStateCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ContractDetail_ContractStateCode?)(EntityOptionSetEnum.GetEnum(this, "contractstatecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicecontractunitscode")]
		public virtual ContractDetail_ServiceContractUnitsCode? ServiceContractUnitsCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ContractDetail_ServiceContractUnitsCode?)(EntityOptionSetEnum.GetEnum(this, "servicecontractunitscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				ServiceContractUnitsCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ContractDetail_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ContractDetail_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}