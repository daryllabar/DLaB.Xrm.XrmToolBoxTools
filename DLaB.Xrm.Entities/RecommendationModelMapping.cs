//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLaB.Xrm.Entities
{
	
	/// <summary>
	/// Entity mapping for the product recommendation model.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("recommendationmodelmapping")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.0.1.7297")]
	public partial class RecommendationModelMapping : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string AccountField = "accountfield";
			public const string AccountFieldDisplayName = "accountfielddisplayname";
			public const string AccountFieldPickList = "accountfieldpicklist";
			public const string ComponentState = "componentstate";
			public const string DataFilter = "datafilter";
			public const string Entity = "entity";
			public const string EntityDisplayName = "entitydisplayname";
			public const string EntityPickList = "entitypicklist";
			public const string ErrorCount = "errorcount";
			public const string FilterXml = "filterxml";
			public const string IsManaged = "ismanaged";
			public const string MappingType = "mappingtype";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string ProductField = "productfield";
			public const string ProductFieldDisplayName = "productfielddisplayname";
			public const string ProductFieldPickList = "productfieldpicklist";
			public const string ProductLineItemRelationship = "productlineitemrelationship";
			public const string ProductLineItemRelationshipDisplayName = "productlineitemrelationshipdisplayname";
			public const string ProductLineItemRelationshipPickList = "productlineitemrelationshippicklist";
			public const string RecommendationModelId = "recommendationmodelid";
			public const string RecommendationModelMappingId = "recommendationmodelmappingid";
			public const string Id = "recommendationmodelmappingid";
			public const string RecommendationModelMappingIdUnique = "recommendationmodelmappingidunique";
			public const string RecommendationModelVersionId = "recommendationmodelversionid";
			public const string SolutionId = "solutionid";
			public const string SupportedMapId = "supportedmapid";
			public const string SynchronizedCount = "synchronizedcount";
			public const string TimeRangeFilter = "timerangefilter";
			public const string TransactionField = "transactionfield";
			public const string organization_recommendationmodelmapping = "organization_recommendationmodelmapping";
			public const string recommendationmodel_recommendationmodelmapping = "recommendationmodel_recommendationmodelmapping";
			public const string Referencingrecommendationmodelmapping_recommendationmodelmapping_supportedmapid = "recommendationmodelmapping_recommendationmodelmapping_supportedmapid";
			public const string recommendationmodelversion_recommendationmodelmapping = "recommendationmodelversion_recommendationmodelmapping";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public RecommendationModelMapping() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "recommendationmodelmapping";
		
		public const int EntityTypeCode = 9934;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Shows the account lookup field of the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountfield")]
		public string AccountField
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("accountfield");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AccountField");
				this.SetAttributeValue("accountfield", value);
				this.OnPropertyChanged("AccountField");
			}
		}
		
		/// <summary>
		/// Account Field Display Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountfielddisplayname")]
		public string AccountFieldDisplayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("accountfielddisplayname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AccountFieldDisplayName");
				this.SetAttributeValue("accountfielddisplayname", value);
				this.OnPropertyChanged("AccountFieldDisplayName");
			}
		}
		
		/// <summary>
		/// Shows the account lookup field of the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountfieldpicklist")]
		public Microsoft.Xrm.Sdk.OptionSetValue AccountFieldPickList
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("accountfieldpicklist");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AccountFieldPickList");
				this.SetAttributeValue("accountfieldpicklist", value);
				this.OnPropertyChanged("AccountFieldPickList");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public Microsoft.Xrm.Sdk.OptionSetValue ComponentState
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("componentstate");
			}
		}
		
		/// <summary>
		/// Shows the data filter for the entity records.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datafilter")]
		public string DataFilter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("datafilter");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DataFilter");
				this.SetAttributeValue("datafilter", value);
				this.OnPropertyChanged("DataFilter");
			}
		}
		
		/// <summary>
		/// Shows the entity used for mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entity")]
		public string Entity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Entity");
				this.SetAttributeValue("entity", value);
				this.OnPropertyChanged("Entity");
			}
		}
		
		/// <summary>
		/// Entity Display Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitydisplayname")]
		public string EntityDisplayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entitydisplayname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityDisplayName");
				this.SetAttributeValue("entitydisplayname", value);
				this.OnPropertyChanged("EntityDisplayName");
			}
		}
		
		/// <summary>
		/// Shows the entity used for mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitypicklist")]
		public Microsoft.Xrm.Sdk.OptionSetValue EntityPickList
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("entitypicklist");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityPickList");
				this.SetAttributeValue("entitypicklist", value);
				this.OnPropertyChanged("EntityPickList");
			}
		}
		
		/// <summary>
		/// Number of Errors that occurred while synchronizing the entity to the recommendation service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errorcount")]
		public System.Nullable<int> ErrorCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("errorcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ErrorCount");
				this.SetAttributeValue("errorcount", value);
				this.OnPropertyChanged("ErrorCount");
			}
		}
		
		/// <summary>
		/// The data filter for the entity records used during synchronization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filterxml")]
		public string FilterXml
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("filterxml");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FilterXml");
				this.SetAttributeValue("filterxml", value);
				this.OnPropertyChanged("FilterXml");
			}
		}
		
		/// <summary>
		/// Is Manageed
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		/// <summary>
		/// Shows the type of entity mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mappingtype")]
		public Microsoft.Xrm.Sdk.OptionSetValue MappingType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("mappingtype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MappingType");
				this.SetAttributeValue("mappingtype", value);
				this.OnPropertyChanged("MappingType");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the entity mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Shows the product lookup field of the line item entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productfield")]
		public string ProductField
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("productfield");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductField");
				this.SetAttributeValue("productfield", value);
				this.OnPropertyChanged("ProductField");
			}
		}
		
		/// <summary>
		/// Product Field Display Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productfielddisplayname")]
		public string ProductFieldDisplayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("productfielddisplayname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductFieldDisplayName");
				this.SetAttributeValue("productfielddisplayname", value);
				this.OnPropertyChanged("ProductFieldDisplayName");
			}
		}
		
		/// <summary>
		/// Shows the product lookup field of the line item entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productfieldpicklist")]
		public Microsoft.Xrm.Sdk.OptionSetValue ProductFieldPickList
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("productfieldpicklist");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductFieldPickList");
				this.SetAttributeValue("productfieldpicklist", value);
				this.OnPropertyChanged("ProductFieldPickList");
			}
		}
		
		/// <summary>
		/// Shows the product line item relationship of the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productlineitemrelationship")]
		public string ProductLineItemRelationship
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("productlineitemrelationship");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductLineItemRelationship");
				this.SetAttributeValue("productlineitemrelationship", value);
				this.OnPropertyChanged("ProductLineItemRelationship");
			}
		}
		
		/// <summary>
		/// Product Line Item Relationship Display Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productlineitemrelationshipdisplayname")]
		public string ProductLineItemRelationshipDisplayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("productlineitemrelationshipdisplayname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductLineItemRelationshipDisplayName");
				this.SetAttributeValue("productlineitemrelationshipdisplayname", value);
				this.OnPropertyChanged("ProductLineItemRelationshipDisplayName");
			}
		}
		
		/// <summary>
		/// Shows the product line item relationship of the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productlineitemrelationshippicklist")]
		public Microsoft.Xrm.Sdk.OptionSetValue ProductLineItemRelationshipPickList
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("productlineitemrelationshippicklist");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductLineItemRelationshipPickList");
				this.SetAttributeValue("productlineitemrelationshippicklist", value);
				this.OnPropertyChanged("ProductLineItemRelationshipPickList");
			}
		}
		
		/// <summary>
		/// Unique identifier for recommendation model associated with entity mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendationmodelid")]
		public Microsoft.Xrm.Sdk.EntityReference RecommendationModelId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("recommendationmodelid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecommendationModelId");
				this.SetAttributeValue("recommendationmodelid", value);
				this.OnPropertyChanged("RecommendationModelId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the entity mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendationmodelmappingid")]
		public System.Nullable<System.Guid> RecommendationModelMappingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("recommendationmodelmappingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecommendationModelMappingId");
				this.SetAttributeValue("recommendationmodelmappingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("RecommendationModelMappingId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendationmodelmappingid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.RecommendationModelMappingId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the entity mapping
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendationmodelmappingidunique")]
		public System.Nullable<System.Guid> RecommendationModelMappingIdUnique
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("recommendationmodelmappingidunique");
			}
		}
		
		/// <summary>
		/// Unique identifier of the model version associated with the entity mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendationmodelversionid")]
		public Microsoft.Xrm.Sdk.EntityReference RecommendationModelVersionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("recommendationmodelversionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecommendationModelVersionId");
				this.SetAttributeValue("recommendationmodelversionid", value);
				this.OnPropertyChanged("RecommendationModelVersionId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Unique identifier for the recommendation entity mapping associated with the basket entity mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportedmapid")]
		public Microsoft.Xrm.Sdk.EntityReference SupportedMapId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("supportedmapid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SupportedMapId");
				this.SetAttributeValue("supportedmapid", value);
				this.OnPropertyChanged("SupportedMapId");
			}
		}
		
		/// <summary>
		/// Shows the number of entity records synchronized to the Azure recommendation service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synchronizedcount")]
		public System.Nullable<int> SynchronizedCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("synchronizedcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SynchronizedCount");
				this.SetAttributeValue("synchronizedcount", value);
				this.OnPropertyChanged("SynchronizedCount");
			}
		}
		
		/// <summary>
		/// Shows the time range filter for the entity records.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timerangefilter")]
		public string TimeRangeFilter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timerangefilter");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeRangeFilter");
				this.SetAttributeValue("timerangefilter", value);
				this.OnPropertyChanged("TimeRangeFilter");
			}
		}
		
		/// <summary>
		/// Shows the primary key field of the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactionfield")]
		public string TransactionField
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("transactionfield");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionField");
				this.SetAttributeValue("transactionfield", value);
				this.OnPropertyChanged("TransactionField");
			}
		}
		
		/// <summary>
		/// 1:N recommendationmodelmapping_recommendationmodelmapping_supportedmapid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recommendationmodelmapping_recommendationmodelmapping_supportedmapid", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Entities.RecommendationModelMapping> Referencedrecommendationmodelmapping_recommendationmodelmapping_supportedmapid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Entities.RecommendationModelMapping>("recommendationmodelmapping_recommendationmodelmapping_supportedmapid", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencedrecommendationmodelmapping_recommendationmodelmapping_supportedmapid");
				this.SetRelatedEntities<Entities.RecommendationModelMapping>("recommendationmodelmapping_recommendationmodelmapping_supportedmapid", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedrecommendationmodelmapping_recommendationmodelmapping_supportedmapid");
			}
		}
		
		/// <summary>
		/// N:1 organization_recommendationmodelmapping
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_recommendationmodelmapping")]
		public Entities.Organization organization_recommendationmodelmapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.Organization>("organization_recommendationmodelmapping", null);
			}
		}
		
		/// <summary>
		/// N:1 recommendationmodel_recommendationmodelmapping
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendationmodelid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recommendationmodel_recommendationmodelmapping")]
		public Entities.RecommendationModel recommendationmodel_recommendationmodelmapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.RecommendationModel>("recommendationmodel_recommendationmodelmapping", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recommendationmodel_recommendationmodelmapping");
				this.SetRelatedEntity<Entities.RecommendationModel>("recommendationmodel_recommendationmodelmapping", null, value);
				this.OnPropertyChanged("recommendationmodel_recommendationmodelmapping");
			}
		}
		
		/// <summary>
		/// N:1 recommendationmodelmapping_recommendationmodelmapping_supportedmapid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportedmapid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recommendationmodelmapping_recommendationmodelmapping_supportedmapid", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Entities.RecommendationModelMapping Referencingrecommendationmodelmapping_recommendationmodelmapping_supportedmapid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.RecommendationModelMapping>("recommendationmodelmapping_recommendationmodelmapping_supportedmapid", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencingrecommendationmodelmapping_recommendationmodelmapping_supportedmapid");
				this.SetRelatedEntity<Entities.RecommendationModelMapping>("recommendationmodelmapping_recommendationmodelmapping_supportedmapid", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("Referencingrecommendationmodelmapping_recommendationmodelmapping_supportedmapid");
			}
		}
		
		/// <summary>
		/// N:1 recommendationmodelversion_recommendationmodelmapping
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendationmodelversionid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recommendationmodelversion_recommendationmodelmapping")]
		public Entities.RecommendationModelVersion recommendationmodelversion_recommendationmodelmapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Entities.RecommendationModelVersion>("recommendationmodelversion_recommendationmodelmapping", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recommendationmodelversion_recommendationmodelmapping");
				this.SetRelatedEntity<Entities.RecommendationModelVersion>("recommendationmodelversion_recommendationmodelmapping", null, value);
				this.OnPropertyChanged("recommendationmodelversion_recommendationmodelmapping");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public RecommendationModelMapping(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["recommendationmodelmappingid"] = base.Id;
                        break;
                    case "recommendationmodelmappingid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountfieldpicklist")]
		public virtual RecommendationModelMapping_AccountFieldPickList? AccountFieldPickListEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecommendationModelMapping_AccountFieldPickList?)(EntityOptionSetEnum.GetEnum(this, "accountfieldpicklist")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				AccountFieldPickList = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual ComponentState? ComponentStateEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ComponentState?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitypicklist")]
		public virtual RecommendationModelMapping_EntityPickList? EntityPickListEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecommendationModelMapping_EntityPickList?)(EntityOptionSetEnum.GetEnum(this, "entitypicklist")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				EntityPickList = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mappingtype")]
		public virtual RecommendationModelMapping_MappingType? MappingTypeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecommendationModelMapping_MappingType?)(EntityOptionSetEnum.GetEnum(this, "mappingtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				MappingType = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productfieldpicklist")]
		public virtual RecommendationModelMapping_ProductFieldPickList? ProductFieldPickListEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecommendationModelMapping_ProductFieldPickList?)(EntityOptionSetEnum.GetEnum(this, "productfieldpicklist")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				ProductFieldPickList = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productlineitemrelationshippicklist")]
		public virtual RecommendationModelMapping_ProductLineItemRelationshipPickList? ProductLineItemRelationshipPickListEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecommendationModelMapping_ProductLineItemRelationshipPickList?)(EntityOptionSetEnum.GetEnum(this, "productlineitemrelationshippicklist")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				ProductLineItemRelationshipPickList = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}